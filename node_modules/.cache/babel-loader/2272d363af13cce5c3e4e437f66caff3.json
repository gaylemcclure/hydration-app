{"ast":null,"code":"var _jsxFileName = \"/Users/gaylemcclure/Dev/water-app/src/routes/WaterPage.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\"; //import WaterGlass from '../components/WaterGlass';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBullseye, faTrophy } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WaterPage() {\n  _s();\n\n  const [newTime, setNewTime] = useState();\n  const [seconds, setSeconds] = useState([{\n    sec1: 0,\n    sec2: 0,\n    secTotal: 60,\n    zero: 0\n  }]);\n  const [minutes, setMinutes] = useState({\n    min1: 0,\n    min2: 0,\n    minTotal: 0,\n    zero: 0\n  }); //Time now to stop the countdown at the selected hour\n\n  let today = new Date();\n  let currentHour = today.getHours(); //Get question page info from local storage. \n\n  useEffect(() => {\n    const time = JSON.parse(localStorage.getItem('time'));\n\n    if (time) {\n      setNewTime(time);\n    }\n  }, []);\n  console.log(newTime);\n  useEffect(() => {\n    if (newTime.remindAmount != null) {\n      setMinutes(minutes => ({ ...minutes,\n        minTotal: newTime.remindAmount - 1\n      }));\n    } else {\n      return;\n    }\n  }, [newTime]); //Splits minutes into single digits\n\n  useEffect(() => {\n    let minuteDigits = minutes.minTotal;\n    let minuteString = minuteDigits.toString();\n    let minuteSplit = minuteString.split('');\n    let newMinute = minuteSplit.map(Number);\n    setMinutes(minutes => ({ ...minutes,\n      min1: minutes.minTotal < 10 ? minutes.zero : newMinute[0],\n      min2: newMinute[1]\n    }));\n  }, [minutes.minTotal]); //Split seconds into separate digits\n\n  useEffect(() => {\n    let lilSecond = \"\";\n    let secondDigits = seconds.secTotal;\n\n    if (secondDigits.length === 1) {\n      lilSecond = \"0\" + secondDigits;\n    } else {\n      lilSecond = secondDigits;\n    }\n\n    let secondString = lilSecond.toString();\n    let secondSplit = secondString.split('');\n    let secs = secondSplit.map(Number);\n    setSeconds(seconds => ({ ...seconds,\n      sec1: secs[0],\n      secs2: secs[1]\n    }));\n  }, [seconds.secTotal]); //timer countdown.\n\n  useEffect(() => {\n    seconds.secTotal > 0 && setTimeout(() => setSeconds(seconds => ({ ...seconds,\n      secTotal: seconds.secTotal - 1\n    })), 1000);\n\n    if (seconds.secTotal === 0) {\n      setMinutes(prevMinute => ({ ...minutes,\n        min2: prevMinute <= 10 ? minutes.zero + prevMinute - 1 : prevMinute - 1\n      }));\n      setSeconds(seconds => ({ ...seconds,\n        secTotal: 59\n      }));\n    }\n  }, [seconds.secTotal]); //Figure out how much water to drink each time\n  // let difference = time.endValue - time.startValue;\n  // let remind;\n  // switch (time.remindValue) {\n  //   case 1:\n  //     remind = 0.5;\n  //     break;\n  //   case 2: \n  //     remind = 0.75;\n  //     break;\n  //   case 3: \n  //     remind = 1;\n  //     break;\n  //   default:\n  //     remind = 1.5;\n  // }\n  // let remindAmountofTimes = Math.floor(difference / remind);\n  // let drinkAmount = (time.waterAmount * 1000) / remindAmountofTimes;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"drink-heading\",\n      children: \"Drink up!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"goal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faBullseye\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 31\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"sub-heading\",\n        children: \"Your Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"test-text\",\n        children: [\"To drink \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"drink-amount\",\n          children: newTime.waterAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 20\n        }, this), \" litres in \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"drink-amount\",\n          children: \"difference\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 90\n        }, this), \" hours.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrophy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"sub-heading\",\n        children: \"How to achieve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"test-text\",\n        children: [\"Drink \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"drink-amount\",\n          children: \"drinkAmount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 40\n        }, this), \"  mls every time the countdown reaches 0.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), \"Press the \\\"I've drank water\\\" button to reset the time\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 70\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: seconds < 10 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [minutes.minTotal, \":0\", seconds.secTotal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Countdown: \", minutes.minTotal, \":\", seconds.secTotal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 75\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      children: \"I drank water!! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), currentHour > newTime.endValue ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Stop drinking water! You can reset again tomorrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Keep drinking!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 100\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WaterPage, \"19N/F4X6YI0TE9AyoBxXLkTl1V8=\");\n\n_c = WaterPage;\nexport default WaterPage; //If the timer only resets every time you click the button, there should be a point at the end time\n//when it stops calculating (ie.7pm) then displays how much water you drank based on the amount to drink each time\n//and the amount of times you click the button. \n//Also - an alarm that goes off when the times reaches 0\n//the countdowna time is held in time.remindAmount\n//When i move it over to WaterPage, i need to access this time.remindAmount, then set a new state - Minutes. \n//Can UseEffect  handle multiple function in the same call? Or do I have to add ANOTHER object into time?!\n//This just sets a continuous timer. Maybe need to move this function to the drink water button click\n// if (minutes.min2 === 0) {\n//   setMinutes(30)\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"WaterPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","FontAwesomeIcon","faBullseye","faTrophy","WaterPage","newTime","setNewTime","seconds","setSeconds","sec1","sec2","secTotal","zero","minutes","setMinutes","min1","min2","minTotal","today","Date","currentHour","getHours","time","JSON","parse","localStorage","getItem","console","log","remindAmount","minuteDigits","minuteString","toString","minuteSplit","split","newMinute","map","Number","lilSecond","secondDigits","length","secondString","secondSplit","secs","secs2","setTimeout","prevMinute","waterAmount","endValue"],"sources":["/Users/gaylemcclure/Dev/water-app/src/routes/WaterPage.js"],"sourcesContent":["import { React, useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\"\n//import WaterGlass from '../components/WaterGlass';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBullseye, faTrophy } from '@fortawesome/free-solid-svg-icons'\n\nfunction WaterPage() {\n\n  const [newTime, setNewTime] = useState();\n  const [seconds, setSeconds] = useState([{\n    sec1: 0,\n    sec2: 0,\n    secTotal: 60,\n    zero: 0\n  }]);\n  const [minutes, setMinutes] = useState({\n    min1: 0,\n    min2: 0,\n    minTotal: 0,\n    zero: 0\n  });\n\n  //Time now to stop the countdown at the selected hour\n  let today = new Date();\n  let currentHour = today.getHours();\n\n  //Get question page info from local storage. \n  useEffect(() => {\n    const time = JSON.parse(localStorage.getItem('time'));\n    if (time) {\n      setNewTime(time)\n    }\n  }, []);\n\n  console.log(newTime)\n\n  useEffect(() => {\n    if (newTime.remindAmount != null) {\n      setMinutes(minutes => ({\n        ...minutes,\n        minTotal: newTime.remindAmount - 1\n     }))\n    }\n    else {\n      return \n    }\n  }, [newTime]);\n\n  //Splits minutes into single digits\n  useEffect(() => {\n    let minuteDigits = minutes.minTotal;\n    let minuteString = minuteDigits.toString();\n    let minuteSplit = minuteString.split('');\n    let newMinute = minuteSplit.map(Number)\n    setMinutes(minutes => ({\n      ...minutes,\n      min1: (minutes.minTotal < 10 ? minutes.zero : newMinute[0]),\n      min2: newMinute[1]\n    }))\n  }, [minutes.minTotal]);\n\n  //Split seconds into separate digits\n  useEffect(() => {\n    let lilSecond = \"\"\n    let secondDigits = seconds.secTotal;\n    if (secondDigits.length === 1) {\n      lilSecond = \"0\" + secondDigits\n    }\n    else {\n      lilSecond = secondDigits\n    }    \n    let secondString = lilSecond.toString();\n    let secondSplit = secondString.split('');\n    let secs = secondSplit.map(Number)\n    setSeconds(seconds => ({\n      ...seconds,\n      sec1: secs[0],\n      secs2: secs[1]\n    }))\n  }, [seconds.secTotal])\n\n\n  //timer countdown.\n  useEffect(() => {\n    seconds.secTotal > 0 && setTimeout(() => setSeconds(seconds => ({...seconds, secTotal: seconds.secTotal - 1})), 1000);\n    if(seconds.secTotal === 0) {\n      setMinutes(prevMinute => ({\n        ...minutes,\n        min2: (prevMinute <= 10 ? minutes.zero + prevMinute - 1 : (prevMinute - 1))\n      }))\n      setSeconds(seconds => ({\n        ...seconds,\n        secTotal: 59\n      }))\n    }\n\n  }, [seconds.secTotal]);\n\n\n  \n  //Figure out how much water to drink each time\n  // let difference = time.endValue - time.startValue;\n  // let remind;\n  // switch (time.remindValue) {\n  //   case 1:\n  //     remind = 0.5;\n  //     break;\n  //   case 2: \n  //     remind = 0.75;\n  //     break;\n  //   case 3: \n  //     remind = 1;\n  //     break;\n  //   default:\n  //     remind = 1.5;\n  // }\n  // let remindAmountofTimes = Math.floor(difference / remind);\n  // let drinkAmount = (time.waterAmount * 1000) / remindAmountofTimes;\n   \n\n  return (\n    <div className=\"App\">\n      <h1 className=\"drink-heading\">Drink up!</h1>\n      <div className=\"goal\">\n        <div className=\"icon\"><FontAwesomeIcon icon={faBullseye} /> </div>\n        <h2 className=\"sub-heading\">Your Goal</h2>\n        <p className=\"test-text\">\n          To drink <span className=\"drink-amount\">{newTime.waterAmount}</span> litres in <span className=\"drink-amount\">difference</span> hours.</p>\n        <div className=\"icon\"><FontAwesomeIcon icon={faTrophy} /></div>\n        <h2 className=\"sub-heading\">How to achieve</h2>\n        <p className=\"test-text\">Drink <span className=\"drink-amount\">drinkAmount</span>  mls every time the countdown reaches 0.\n          <br />Press the \"I've drank water\" button to reset the time<br />\n        </p>\n      </div>\n      {/* <h1>Time now is {currentTime}</h1> */}\n      <div className=\"timer\">\n      {seconds < 10 ? <div>{minutes.minTotal}:0{seconds.secTotal}</div> : <div>Countdown: {minutes.minTotal}:{seconds.secTotal}</div>} \n      </div>\n      {/* <WaterGlass /> */}\n      <button className=\"reset-button\">I drank water!! </button>\n      <Link to=\"/\"><button>Reset</button></Link>\n      {currentHour > newTime.endValue ? <p>Stop drinking water! You can reset again tomorrow</p> : <p>Keep drinking!!</p>}\n\n    </div>\n  )\n}\n\nexport default WaterPage;\n\n\n//If the timer only resets every time you click the button, there should be a point at the end time\n//when it stops calculating (ie.7pm) then displays how much water you drank based on the amount to drink each time\n//and the amount of times you click the button. \n//Also - an alarm that goes off when the times reaches 0\n\n//the countdowna time is held in time.remindAmount\n//When i move it over to WaterPage, i need to access this time.remindAmount, then set a new state - Minutes. \n//Can UseEffect  handle multiple function in the same call? Or do I have to add ANOTHER object into time?!\n\n\n    //This just sets a continuous timer. Maybe need to move this function to the drink water button click\n    // if (minutes.min2 === 0) {\n    //   setMinutes(30)\n    // }"],"mappings":"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"},"metadata":{},"sourceType":"module"}