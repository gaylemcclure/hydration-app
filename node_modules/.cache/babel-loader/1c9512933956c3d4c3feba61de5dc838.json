{"ast":null,"code":"const findCacheDir = require('find-cache-dir');\n\nconst Git = require('./git.js');\n\nconst filenamify = require('filenamify');\n\nconst copy = require('./util.js').copy;\n\nconst getUser = require('./util.js').getUser;\n\nconst fs = require('fs-extra');\n\nconst globby = require('globby');\n\nconst path = require('path');\n\nconst util = require('util');\n\nconst log = util.debuglog('gh-pages');\n/**\n * Get the cache directory.\n * @param {string} [optPath] Optional path.\n * @return {string} The full path to the cache directory.\n */\n\nfunction getCacheDir(optPath) {\n  const dir = findCacheDir({\n    name: 'gh-pages'\n  });\n\n  if (!optPath) {\n    return dir;\n  }\n\n  return path.join(dir, filenamify(optPath));\n}\n\nexports.getCacheDir = getCacheDir;\n\nfunction getRepo(options) {\n  if (options.repo) {\n    return Promise.resolve(options.repo);\n  } else {\n    const git = new Git(process.cwd(), options.git);\n    return git.getRemoteUrl(options.remote);\n  }\n}\n\nexports.defaults = {\n  dest: '.',\n  add: false,\n  git: 'git',\n  depth: 1,\n  dotfiles: false,\n  branch: 'gh-pages',\n  remote: 'origin',\n  src: '**/*',\n  remove: '.',\n  push: true,\n  history: true,\n  message: 'Updates',\n  silent: false\n};\n/**\n * Push a git branch to a remote (pushes gh-pages by default).\n * @param {string} basePath The base path.\n * @param {object} config Publish options.\n * @param {Function} callback Callback.\n * @return {Promise} A promise.\n */\n\nexports.publish = function publish(basePath, config, callback) {\n  if (typeof config === 'function') {\n    callback = config;\n    config = {};\n  }\n\n  const options = Object.assign({}, exports.defaults, config); // For backward compatibility before fixing #334\n\n  if (options.only) {\n    options.remove = options.only;\n  }\n\n  if (!callback) {\n    callback = function (err) {\n      if (err) {\n        log(err.message);\n      }\n    };\n  }\n\n  function done(err) {\n    try {\n      callback(err);\n    } catch (err2) {\n      log('Publish callback threw: %s', err2.message);\n    }\n  }\n\n  try {\n    if (!fs.statSync(basePath).isDirectory()) {\n      const err = new Error('The \"base\" option must be an existing directory');\n      done(err);\n      return Promise.reject(err);\n    }\n  } catch (err) {\n    done(err);\n    return Promise.reject(err);\n  }\n\n  const files = globby.sync(options.src, {\n    cwd: basePath,\n    dot: options.dotfiles\n  }).filter(file => {\n    return !fs.statSync(path.join(basePath, file)).isDirectory();\n  });\n\n  if (!Array.isArray(files) || files.length === 0) {\n    done(new Error('The pattern in the \"src\" property didn\\'t match any files.'));\n    return;\n  }\n\n  let repoUrl;\n  let userPromise;\n\n  if (options.user) {\n    userPromise = Promise.resolve(options.user);\n  } else {\n    userPromise = getUser();\n  }\n\n  return userPromise.then(user => getRepo(options).then(repo => {\n    repoUrl = repo;\n    const clone = getCacheDir(repo);\n    log('Cloning %s into %s', repo, clone);\n    return Git.clone(repo, clone, options.branch, options);\n  }).then(git => {\n    return git.getRemoteUrl(options.remote).then(url => {\n      if (url !== repoUrl) {\n        const message = 'Remote url mismatch.  Got \"' + url + '\" ' + 'but expected \"' + repoUrl + '\" in ' + git.cwd + '.  Try running the `gh-pages-clean` script first.';\n        throw new Error(message);\n      }\n\n      return git;\n    });\n  }).then(git => {\n    // only required if someone mucks with the checkout between builds\n    log('Cleaning');\n    return git.clean();\n  }).then(git => {\n    log('Fetching %s', options.remote);\n    return git.fetch(options.remote);\n  }).then(git => {\n    log('Checking out %s/%s ', options.remote, options.branch);\n    return git.checkout(options.remote, options.branch);\n  }).then(git => {\n    if (!options.history) {\n      return git.deleteRef(options.branch);\n    } else {\n      return git;\n    }\n  }).then(git => {\n    if (options.add) {\n      return git;\n    }\n\n    log('Removing files');\n    const files = globby.sync(options.remove, {\n      cwd: path.join(git.cwd, options.dest)\n    }).map(file => path.join(options.dest, file));\n\n    if (files.length > 0) {\n      return git.rm(files);\n    } else {\n      return git;\n    }\n  }).then(git => {\n    if (options.nojekyll) {\n      log('Creating .nojekyll');\n      fs.createFileSync(path.join(git.cwd, '.nojekyll'));\n    }\n\n    if (options.cname) {\n      log('Creating CNAME for %s', options.cname);\n      fs.writeFileSync(path.join(git.cwd, 'CNAME'), options.cname);\n    }\n\n    log('Copying files');\n    return copy(files, basePath, path.join(git.cwd, options.dest)).then(function () {\n      return git;\n    });\n  }).then(git => {\n    return Promise.resolve(options.beforeAdd && options.beforeAdd(git)).then(() => git);\n  }).then(git => {\n    log('Adding all');\n    return git.add('.');\n  }).then(git => {\n    if (!user) {\n      return git;\n    }\n\n    return git.exec('config', 'user.email', user.email).then(() => {\n      if (!user.name) {\n        return git;\n      }\n\n      return git.exec('config', 'user.name', user.name);\n    });\n  }).then(git => {\n    log('Committing');\n    return git.commit(options.message);\n  }).then(git => {\n    if (options.tag) {\n      log('Tagging');\n      return git.tag(options.tag).catch(error => {\n        // tagging failed probably because this tag alredy exists\n        log(error);\n        log('Tagging failed, continuing');\n        return git;\n      });\n    } else {\n      return git;\n    }\n  }).then(git => {\n    if (options.push) {\n      log('Pushing');\n      return git.push(options.remote, options.branch, !options.history);\n    } else {\n      return git;\n    }\n  }).then(() => done(), error => {\n    if (options.silent) {\n      error = new Error('Unspecified error (run without silent option for detail)');\n    }\n\n    done(error);\n  }));\n};\n/**\n * Clean the cache directory.\n */\n\n\nexports.clean = function clean() {\n  fs.removeSync(getCacheDir());\n};","map":{"version":3,"names":["findCacheDir","require","Git","filenamify","copy","getUser","fs","globby","path","util","log","debuglog","getCacheDir","optPath","dir","name","join","exports","getRepo","options","repo","Promise","resolve","git","process","cwd","getRemoteUrl","remote","defaults","dest","add","depth","dotfiles","branch","src","remove","push","history","message","silent","publish","basePath","config","callback","Object","assign","only","err","done","err2","statSync","isDirectory","Error","reject","files","sync","dot","filter","file","Array","isArray","length","repoUrl","userPromise","user","then","clone","url","clean","fetch","checkout","deleteRef","map","rm","nojekyll","createFileSync","cname","writeFileSync","beforeAdd","exec","email","commit","tag","catch","error","removeSync"],"sources":["C:/Users/gayle/Dev/hydration-app/node_modules/gh-pages/lib/index.js"],"sourcesContent":["const findCacheDir = require('find-cache-dir');\nconst Git = require('./git.js');\nconst filenamify = require('filenamify');\nconst copy = require('./util.js').copy;\nconst getUser = require('./util.js').getUser;\nconst fs = require('fs-extra');\nconst globby = require('globby');\nconst path = require('path');\nconst util = require('util');\n\nconst log = util.debuglog('gh-pages');\n\n/**\n * Get the cache directory.\n * @param {string} [optPath] Optional path.\n * @return {string} The full path to the cache directory.\n */\nfunction getCacheDir(optPath) {\n  const dir = findCacheDir({name: 'gh-pages'});\n  if (!optPath) {\n    return dir;\n  }\n\n  return path.join(dir, filenamify(optPath));\n}\nexports.getCacheDir = getCacheDir;\n\nfunction getRepo(options) {\n  if (options.repo) {\n    return Promise.resolve(options.repo);\n  } else {\n    const git = new Git(process.cwd(), options.git);\n    return git.getRemoteUrl(options.remote);\n  }\n}\n\nexports.defaults = {\n  dest: '.',\n  add: false,\n  git: 'git',\n  depth: 1,\n  dotfiles: false,\n  branch: 'gh-pages',\n  remote: 'origin',\n  src: '**/*',\n  remove: '.',\n  push: true,\n  history: true,\n  message: 'Updates',\n  silent: false,\n};\n\n/**\n * Push a git branch to a remote (pushes gh-pages by default).\n * @param {string} basePath The base path.\n * @param {object} config Publish options.\n * @param {Function} callback Callback.\n * @return {Promise} A promise.\n */\nexports.publish = function publish(basePath, config, callback) {\n  if (typeof config === 'function') {\n    callback = config;\n    config = {};\n  }\n\n  const options = Object.assign({}, exports.defaults, config);\n\n  // For backward compatibility before fixing #334\n  if (options.only) {\n    options.remove = options.only;\n  }\n\n  if (!callback) {\n    callback = function (err) {\n      if (err) {\n        log(err.message);\n      }\n    };\n  }\n\n  function done(err) {\n    try {\n      callback(err);\n    } catch (err2) {\n      log('Publish callback threw: %s', err2.message);\n    }\n  }\n\n  try {\n    if (!fs.statSync(basePath).isDirectory()) {\n      const err = new Error('The \"base\" option must be an existing directory');\n      done(err);\n      return Promise.reject(err);\n    }\n  } catch (err) {\n    done(err);\n    return Promise.reject(err);\n  }\n\n  const files = globby\n    .sync(options.src, {\n      cwd: basePath,\n      dot: options.dotfiles,\n    })\n    .filter((file) => {\n      return !fs.statSync(path.join(basePath, file)).isDirectory();\n    });\n\n  if (!Array.isArray(files) || files.length === 0) {\n    done(\n      new Error('The pattern in the \"src\" property didn\\'t match any files.')\n    );\n    return;\n  }\n\n  let repoUrl;\n  let userPromise;\n  if (options.user) {\n    userPromise = Promise.resolve(options.user);\n  } else {\n    userPromise = getUser();\n  }\n  return userPromise.then((user) =>\n    getRepo(options)\n      .then((repo) => {\n        repoUrl = repo;\n        const clone = getCacheDir(repo);\n        log('Cloning %s into %s', repo, clone);\n        return Git.clone(repo, clone, options.branch, options);\n      })\n      .then((git) => {\n        return git.getRemoteUrl(options.remote).then((url) => {\n          if (url !== repoUrl) {\n            const message =\n              'Remote url mismatch.  Got \"' +\n              url +\n              '\" ' +\n              'but expected \"' +\n              repoUrl +\n              '\" in ' +\n              git.cwd +\n              '.  Try running the `gh-pages-clean` script first.';\n            throw new Error(message);\n          }\n          return git;\n        });\n      })\n      .then((git) => {\n        // only required if someone mucks with the checkout between builds\n        log('Cleaning');\n        return git.clean();\n      })\n      .then((git) => {\n        log('Fetching %s', options.remote);\n        return git.fetch(options.remote);\n      })\n      .then((git) => {\n        log('Checking out %s/%s ', options.remote, options.branch);\n        return git.checkout(options.remote, options.branch);\n      })\n      .then((git) => {\n        if (!options.history) {\n          return git.deleteRef(options.branch);\n        } else {\n          return git;\n        }\n      })\n      .then((git) => {\n        if (options.add) {\n          return git;\n        }\n\n        log('Removing files');\n        const files = globby\n          .sync(options.remove, {\n            cwd: path.join(git.cwd, options.dest),\n          })\n          .map((file) => path.join(options.dest, file));\n        if (files.length > 0) {\n          return git.rm(files);\n        } else {\n          return git;\n        }\n      })\n      .then((git) => {\n        if (options.nojekyll) {\n          log('Creating .nojekyll');\n          fs.createFileSync(path.join(git.cwd, '.nojekyll'));\n        }\n        if (options.cname) {\n          log('Creating CNAME for %s', options.cname);\n          fs.writeFileSync(path.join(git.cwd, 'CNAME'), options.cname);\n        }\n        log('Copying files');\n        return copy(files, basePath, path.join(git.cwd, options.dest)).then(\n          function () {\n            return git;\n          }\n        );\n      })\n      .then((git) => {\n        return Promise.resolve(\n          options.beforeAdd && options.beforeAdd(git)\n        ).then(() => git);\n      })\n      .then((git) => {\n        log('Adding all');\n        return git.add('.');\n      })\n      .then((git) => {\n        if (!user) {\n          return git;\n        }\n        return git.exec('config', 'user.email', user.email).then(() => {\n          if (!user.name) {\n            return git;\n          }\n          return git.exec('config', 'user.name', user.name);\n        });\n      })\n      .then((git) => {\n        log('Committing');\n        return git.commit(options.message);\n      })\n      .then((git) => {\n        if (options.tag) {\n          log('Tagging');\n          return git.tag(options.tag).catch((error) => {\n            // tagging failed probably because this tag alredy exists\n            log(error);\n            log('Tagging failed, continuing');\n            return git;\n          });\n        } else {\n          return git;\n        }\n      })\n      .then((git) => {\n        if (options.push) {\n          log('Pushing');\n          return git.push(options.remote, options.branch, !options.history);\n        } else {\n          return git;\n        }\n      })\n      .then(\n        () => done(),\n        (error) => {\n          if (options.silent) {\n            error = new Error(\n              'Unspecified error (run without silent option for detail)'\n            );\n          }\n          done(error);\n        }\n      )\n  );\n};\n\n/**\n * Clean the cache directory.\n */\nexports.clean = function clean() {\n  fs.removeSync(getCacheDir());\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}