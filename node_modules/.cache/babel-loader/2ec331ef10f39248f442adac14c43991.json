{"ast":null,"code":"var _jsxFileName = \"/Users/gaylemcclure/Dev/water-app/src/routes/WaterPage.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\"; //import WaterGlass from '../components/WaterGlass';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBullseye, faTrophy } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WaterPage() {\n  _s();\n\n  const [time, setTime] = useState([]);\n  const [seconds, setSeconds] = useState({\n    sec1: 0,\n    sec2: 0,\n    secTotal: 60,\n    zero: 0\n  });\n  const [minutes, setMinutes] = useState({\n    min1: 0,\n    min2: 0,\n    minTotal: 0,\n    zero: 0\n  }); //Time now to stop the countdown at the selected hour\n\n  let today = new Date();\n  let currentHour = today.getHours(); //Figure out how much water to drink each time\n\n  let difference = time.endValue - time.startValue;\n  let remind;\n\n  switch (time.remindValue) {\n    case 1:\n      remind = 0.5;\n      break;\n\n    case 2:\n      remind = 0.75;\n      break;\n\n    case 3:\n      remind = 1;\n      break;\n\n    default:\n      remind = 1.5;\n  }\n\n  let remindAmountofTimes = Math.floor(difference / remind);\n  let drinkAmount = time.waterAmount * 1000 / remindAmountofTimes; //Get question page info from local storage. SetMinutes is using a shallow copy to set minTotal. \n\n  useEffect(() => {\n    const time = JSON.parse(localStorage.getItem('time'));\n\n    if (time) {\n      setTime(time);\n      setMinutes(minutes => ({ ...minutes,\n        minTotal: time.remindAmount - 1\n      }));\n    }\n  }, []); //timer countdown. Conditional rendering to add an extra 0 to single digit minutes\n\n  useEffect(() => {\n    seconds.secTotal > 0 && setTimeout(() => setSeconds(seconds => ({ ...seconds,\n      secTotal: seconds.secTotal - 1\n    })), 1000);\n\n    if (seconds.sec2 === 0) {\n      setMinutes(prevMinute => ({ ...minutes,\n        min2: prevMinute <= 10 ? minutes.zero + prevMinute - 1 : prevMinute - 1\n      }));\n      setSeconds(seconds => ({ ...seconds,\n        secTotal: 59\n      }));\n    } //This just sets a continuous timer. Maybe need to move this function to the drink water button click\n    // if (minutes.min2 === 0) {\n    //   setMinutes(30)\n    // }\n\n  }, [seconds]); //Split minutes into separate digits\n\n  let minuteDigits = minutes.minTotal;\n  let minuteString = minuteDigits.toString();\n  let minuteSplit = minuteString.split('');\n  let newMinute = minuteSplit.map(Number);\n  setMinutes(minutes => ({ ...minutes,\n    min1: newMinute[0],\n    min2: newMinute[1]\n  })); //Split seconds into separate digits\n  // let secondDigits = seconds.secTotal\n  //  if (secondDigits.length === 1) {\n  //    second = \"0\" + secondDigits\n  //  }\n  //  else {\n  //    second = secondDigits\n  //  }\n  //  let digitSplit = second.split('');\n  //  let secs = digitSplit.map(Number)\n  //  let sec1 = secs[0]\n  //  let sec2 = secs[1]\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"drink-heading\",\n      children: [\"Drink up! \", minutes.minTotal]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"goal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faBullseye\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 31\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"sub-heading\",\n        children: \"Your Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"test-text\",\n        children: [\"To drink \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"drink-amount\",\n          children: time.waterAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 20\n        }, this), \" litres in \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"drink-amount\",\n          children: difference\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 87\n        }, this), \" hours.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrophy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"sub-heading\",\n        children: \"How to achieve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"test-text\",\n        children: [\"Drink \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"drink-amount\",\n          children: drinkAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 40\n        }, this), \"  mls every time the countdown reaches 0.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), \"Press the \\\"I've drank water\\\" button to reset the time\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 70\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: seconds < 10 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [minutes, \":0\", seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Countdown: \", minutes, \":\", seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      children: \"I drank water!! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), currentHour > time.endValue ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Stop drinking water! You can reset again tomorrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Keep drinking!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 97\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WaterPage, \"ONoAb2cY/mzuxIG2rBYQkmnkUE4=\");\n\n_c = WaterPage;\nexport default WaterPage; //If the timer only resets every time you click the button, there should be a point at the end time\n//when it stops calculating (ie.7pm) then displays how much water you drank based on the amount to drink each time\n//and the amount of times you click the button. \n//Also - an alarm that goes off when the times reaches 0\n//the countdowna time is held in time.remindAmount\n//When i move it over to WaterPage, i need to access this time.remindAmount, then set a new state - Minutes. \n//Can UseEffect  handle multiple function in the same call? Or do I have to add ANOTHER object into time?!\n\nvar _c;\n\n$RefreshReg$(_c, \"WaterPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","FontAwesomeIcon","faBullseye","faTrophy","WaterPage","time","setTime","seconds","setSeconds","sec1","sec2","secTotal","zero","minutes","setMinutes","min1","min2","minTotal","today","Date","currentHour","getHours","difference","endValue","startValue","remind","remindValue","remindAmountofTimes","Math","floor","drinkAmount","waterAmount","JSON","parse","localStorage","getItem","remindAmount","setTimeout","prevMinute","minuteDigits","minuteString","toString","minuteSplit","split","newMinute","map","Number"],"sources":["/Users/gaylemcclure/Dev/water-app/src/routes/WaterPage.js"],"sourcesContent":["import { React, useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\"\n//import WaterGlass from '../components/WaterGlass';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBullseye, faTrophy } from '@fortawesome/free-solid-svg-icons'\n\nfunction WaterPage() {\n\n  const [time, setTime] = useState([]);\n  const [seconds, setSeconds] = useState({\n    sec1: 0,\n    sec2: 0,\n    secTotal: 60,\n    zero: 0\n  });\n  const [minutes, setMinutes] = useState({\n    min1: 0,\n    min2: 0,\n    minTotal: 0,\n    zero: 0\n  });\n\n  //Time now to stop the countdown at the selected hour\n  let today = new Date();\n  let currentHour = today.getHours();\n  \n  //Figure out how much water to drink each time\n  let difference = time.endValue - time.startValue;\n  let remind;\n  switch (time.remindValue) {\n    case 1:\n      remind = 0.5;\n      break;\n    case 2: \n      remind = 0.75;\n      break;\n    case 3: \n      remind = 1;\n      break;\n    default:\n      remind = 1.5;\n  }\n  let remindAmountofTimes = Math.floor(difference / remind);\n  let drinkAmount = (time.waterAmount * 1000) / remindAmountofTimes;\n   \n  //Get question page info from local storage. SetMinutes is using a shallow copy to set minTotal. \n  useEffect(() => {\n    const time = JSON.parse(localStorage.getItem('time'));\n    if (time) {\n      setTime(time);\n      setMinutes(minutes => ({\n        ...minutes,\n        minTotal: time.remindAmount - 1\n      }))\n    }\n  }, []);\n\n  //timer countdown. Conditional rendering to add an extra 0 to single digit minutes\n  useEffect(() => {\n    seconds.secTotal > 0 && setTimeout(() => setSeconds(seconds => ({...seconds, secTotal: seconds.secTotal - 1})), 1000);\n    if(seconds.sec2 === 0) {\n      setMinutes(prevMinute => ({\n        ...minutes,\n        min2: (prevMinute <= 10 ? minutes.zero + prevMinute - 1 : (prevMinute - 1))\n      }))\n      setSeconds(seconds => ({\n        ...seconds,\n        secTotal: 59\n      }))\n    }\n    //This just sets a continuous timer. Maybe need to move this function to the drink water button click\n    // if (minutes.min2 === 0) {\n    //   setMinutes(30)\n    // }\n  }, [seconds]);\n\n   //Split minutes into separate digits\n   let minuteDigits = minutes.minTotal;\n   let minuteString = minuteDigits.toString();\n   let minuteSplit = minuteString.split('');\n   let newMinute = minuteSplit.map(Number)\n   setMinutes(minutes => ({\n     ...minutes,\n     min1: newMinute[0],\n     min2: newMinute[1]\n   }))\n\n   //Split seconds into separate digits\n  // let secondDigits = seconds.secTotal\n\n  //  if (secondDigits.length === 1) {\n  //    second = \"0\" + secondDigits\n  //  }\n  //  else {\n  //    second = secondDigits\n  //  }\n\n  //  let digitSplit = second.split('');\n  //  let secs = digitSplit.map(Number)\n  //  let sec1 = secs[0]\n  //  let sec2 = secs[1]\n\n   \n\n\n\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"drink-heading\">Drink up! {minutes.minTotal}</h1>\n      <div className=\"goal\">\n        <div className=\"icon\"><FontAwesomeIcon icon={faBullseye} /> </div>\n        <h2 className=\"sub-heading\">Your Goal</h2>\n        <p className=\"test-text\">\n          To drink <span className=\"drink-amount\">{time.waterAmount}</span> litres in <span className=\"drink-amount\">{difference}</span> hours.</p>\n        <div className=\"icon\"><FontAwesomeIcon icon={faTrophy} /></div>\n        <h2 className=\"sub-heading\">How to achieve</h2>\n        <p className=\"test-text\">Drink <span className=\"drink-amount\">{drinkAmount}</span>  mls every time the countdown reaches 0.\n          <br />Press the \"I've drank water\" button to reset the time<br />\n        </p>\n      </div>\n      {/* <h1>Time now is {currentTime}</h1> */}\n      <div className=\"timer\">\n      {seconds < 10 ? <div>{minutes}:0{seconds}</div> : <div>Countdown: {minutes}:{seconds}</div>} \n      </div>\n      {/* <WaterGlass /> */}\n      <button className=\"reset-button\">I drank water!! </button>\n      <Link to=\"/\"><button>Reset</button></Link>\n      {currentHour > time.endValue ? <p>Stop drinking water! You can reset again tomorrow</p> : <p>Keep drinking!!</p>}\n\n    </div>\n  )\n}\n\nexport default WaterPage;\n\n\n//If the timer only resets every time you click the button, there should be a point at the end time\n//when it stops calculating (ie.7pm) then displays how much water you drank based on the amount to drink each time\n//and the amount of times you click the button. \n//Also - an alarm that goes off when the times reaches 0\n\n//the countdowna time is held in time.remindAmount\n//When i move it over to WaterPage, i need to access this time.remindAmount, then set a new state - Minutes. \n//Can UseEffect  handle multiple function in the same call? Or do I have to add ANOTHER object into time?!"],"mappings":"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"},"metadata":{},"sourceType":"module"}