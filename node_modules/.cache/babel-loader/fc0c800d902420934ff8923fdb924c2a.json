{"ast":null,"code":"var _jsxFileName = \"/Users/gaylemcclure/Dev/water-app/src/routes/WaterPage.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\"; //import WaterGlass from '../components/WaterGlass';\n\nimport TimerRunning from '../components/TimerRunning';\nimport TimerFinished from '../components/TimerFinished';\nimport CountdownTimer from '../components/CountdownTimer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WaterPage() {\n  _s();\n\n  const [time, setTime] = useState([]);\n  const [reset, setReset] = useState(false);\n  const [clickCount, setClickCount] = useState(0);\n  const [seconds, setSeconds] = useState({\n    sec1: 5,\n    sec2: 9,\n    secTotal: 60,\n    zero: 0\n  });\n  const [minutes, setMinutes] = useState({\n    min1: '',\n    min2: '',\n    minTotal: 0,\n    zero: 0\n  }); //Time now to stop the countdown at the selected hour\n\n  let today = new Date();\n  let currentHour = today.getHours(); //Get question page info from local storage. \n\n  useEffect(() => {\n    const time = JSON.parse(localStorage.getItem('time'));\n\n    if (time) {\n      setTime(time);\n    }\n\n    setMinutes(minutes => ({ ...minutes,\n      minTotal: time.remindAmount\n    }));\n  }, []); //Initially sets the single minutes\n\n  useEffect(() => {\n    if (time.length !== 0) {\n      let min = time.remindAmount - 1;\n      let newMin = min.toString().split('');\n      let minSplit = newMin.map(Number);\n      setMinutes(minutes => ({ ...minutes,\n        minTotal: minutes.minTotal - 1,\n        min1: minSplit[0],\n        min2: minSplit[1]\n      }));\n    }\n  }, [time]); //timer countdown.\n\n  useEffect(() => {\n    //Splits the seconds to individual seconds\n    let sec = seconds.secTotal - 1;\n    let newSec = sec.toString().split('');\n    let secSplit = newSec.map(Number);\n\n    if (secSplit.length === 1) {\n      secSplit.unshift(0);\n    } //Splits the minutes to individual digits\n\n\n    let min = minutes.minTotal - 1;\n    let newMin = min.toString().split('');\n    let minSplit = newMin.map(Number);\n\n    if (minSplit.length === 1) {\n      secSplit.unshift(0);\n    } //Greater than 0 - countdown keeps going\n\n\n    if (seconds.secTotal > 0) {\n      const timer = () => setTimeout(() => setSeconds(seconds => ({ ...seconds,\n        secTotal: seconds.secTotal - 1,\n        sec1: secSplit[0],\n        sec2: secSplit[1]\n      })), 1000);\n\n      const timerId = timer();\n\n      if (reset === true) {\n        clearTimeout(timerId);\n        setReset(false);\n        setMinutes(minutes => ({ ...minutes,\n          minTotal: time.remindAmount - 1\n        }));\n        setSeconds(seconds => ({ ...seconds,\n          secTotal: 60\n        }));\n      }\n    } //Seconds = 0 will reduce minutes by 1 and reset seconds to 59\n\n\n    if (seconds.secTotal === 0 && reset === false) {\n      setMinutes(minutes => ({ ...minutes,\n        minTotal: minutes.minTotal - 1,\n        min1: minSplit[0],\n        min2: minSplit[1]\n      }));\n      setSeconds(seconds => ({ ...seconds,\n        secTotal: 59\n      }));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [seconds]); //Figure out how much water to drink each time\n\n  let difference = time.endValue - time.startValue;\n  let remind;\n\n  switch (time.remindValue) {\n    case 1:\n      remind = 0.5;\n      break;\n\n    case 2:\n      remind = 0.75;\n      break;\n\n    case 3:\n      remind = 1;\n      break;\n\n    default:\n      remind = 1.5;\n  }\n\n  let remindAmountofTimes = Math.floor(difference / remind);\n  let drinkAmount = Math.round(time.waterAmount * 1000 / remindAmountofTimes);\n  let totalDrank = drinkAmount * clickCount;\n\n  const handleReset = () => {\n    setReset(true);\n    setClickCount(prevClick => {\n      return prevClick + 1;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"drink-heading\",\n      children: \"Drink up!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountdownTimer, {\n      min1: minutes.min1,\n      min2: minutes.min2,\n      sec1: seconds.sec1,\n      sec2: seconds.sec2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), currentHour >= time.endValue ? /*#__PURE__*/_jsxDEV(TimerFinished, {\n      waterAmount: time.waterAmount,\n      totalDrank: totalDrank,\n      difference: difference\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(TimerRunning, {\n      waterAmount: time.waterAmount,\n      difference: difference,\n      drinkAmount: drinkAmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 138\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"drink-button\",\n      onClick: handleReset,\n      children: \"I drank water! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-button\",\n        children: \"Start again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), currentHour >= time.endValue ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Stop drinking water! You can reset again tomorrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Keep drinking!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 98\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WaterPage, \"gyrgYU+XI6oxu4wFzDfzd90IvjQ=\");\n\n_c = WaterPage;\nexport default WaterPage; //If the timer only resets every time you click the button, there should be a point at the end time\n//when it stops calculating (ie.7pm) then displays how much water you drank based on the amount to drink each time\n//and the amount of times you click the button. \n//Also - an alarm that goes off when the times reaches 0\n//Fix the css of the countdown - add in a page flip\n//Sort out what happens when the timer reaches 0 with the water glass animation\n\nvar _c;\n\n$RefreshReg$(_c, \"WaterPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","TimerRunning","TimerFinished","CountdownTimer","WaterPage","time","setTime","reset","setReset","clickCount","setClickCount","seconds","setSeconds","sec1","sec2","secTotal","zero","minutes","setMinutes","min1","min2","minTotal","today","Date","currentHour","getHours","JSON","parse","localStorage","getItem","remindAmount","length","min","newMin","toString","split","minSplit","map","Number","sec","newSec","secSplit","unshift","timer","setTimeout","timerId","clearTimeout","difference","endValue","startValue","remind","remindValue","remindAmountofTimes","Math","floor","drinkAmount","round","waterAmount","totalDrank","handleReset","prevClick"],"sources":["/Users/gaylemcclure/Dev/water-app/src/routes/WaterPage.js"],"sourcesContent":["import { React, useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\"\n//import WaterGlass from '../components/WaterGlass';\nimport TimerRunning from '../components/TimerRunning';\nimport TimerFinished from '../components/TimerFinished';\nimport CountdownTimer from '../components/CountdownTimer';\n\nfunction WaterPage() {\n\n  const [time, setTime] = useState([]);\n  const [reset, setReset] = useState(false);\n  const [clickCount, setClickCount] = useState(0)\n  const [seconds, setSeconds] = useState({\n    sec1: 5,\n    sec2: 9,\n    secTotal: 60,\n    zero: 0\n  });\n  const [minutes, setMinutes] = useState({\n    min1: '',\n    min2: '',\n    minTotal: 0,\n    zero: 0\n  });\n\n  //Time now to stop the countdown at the selected hour\n  let today = new Date();\n  let currentHour = today.getHours();\n\n  //Get question page info from local storage. \n  useEffect(() => {\n    const time = JSON.parse(localStorage.getItem('time'));\n    if (time) {\n      setTime(time)\n    }\n    setMinutes(minutes => ({\n      ...minutes,\n      minTotal: time.remindAmount\n    }))\n  }, []);\n\n  //Initially sets the single minutes\n  useEffect(() => {\n    if (time.length !== 0) {\n      let min = time.remindAmount - 1\n      let newMin = min.toString().split('')\n      let minSplit = newMin.map(Number)\n      setMinutes(minutes => ({\n        ...minutes,\n        minTotal: minutes.minTotal - 1,\n        min1: minSplit[0],\n        min2: minSplit[1]\n      }))\n  }\n  }, [time])\n\n\n  //timer countdown.\n  useEffect(() => {\n    //Splits the seconds to individual seconds\n    let sec = seconds.secTotal - 1\n    let newSec = sec.toString().split('')\n    let secSplit = newSec.map(Number)\n    if (secSplit.length === 1) {\n      secSplit.unshift(0)\n    }\n    //Splits the minutes to individual digits\n    let min = minutes.minTotal - 1\n    let newMin = min.toString().split('')\n    let minSplit = newMin.map(Number)\n    if (minSplit.length === 1) {\n      secSplit.unshift(0)\n    }\n    //Greater than 0 - countdown keeps going\n    if (seconds.secTotal > 0) {\n      const timer = () => setTimeout(() => setSeconds(seconds => ({...seconds, secTotal: seconds.secTotal - 1, sec1: secSplit[0], sec2: secSplit[1]})), 1000);\n      const timerId = timer()\n      if (reset === true) {\n        clearTimeout(timerId)\n        setReset(false)\n        setMinutes(minutes => ({\n          ...minutes,\n          minTotal: time.remindAmount - 1\n        }))\n        setSeconds(seconds => ({\n          ...seconds,\n          secTotal: 60\n        }))\n      }\n    }\n    //Seconds = 0 will reduce minutes by 1 and reset seconds to 59\n    if(seconds.secTotal === 0 && reset === false) {\n      setMinutes(minutes => ({\n        ...minutes,\n        minTotal: minutes.minTotal - 1,\n        min1: minSplit[0],\n        min2: minSplit[1]\n      }))\n      setSeconds(seconds => ({\n        ...seconds,\n        secTotal: 59\n      }))\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [seconds]);\n\n  \n  //Figure out how much water to drink each time\n  let difference = time.endValue - time.startValue;\n  let remind;\n  switch (time.remindValue) {\n    case 1:\n      remind = 0.5;\n      break;\n    case 2: \n      remind = 0.75;\n      break;\n    case 3: \n      remind = 1;\n      break;\n    default:\n      remind = 1.5;\n  }\n  let remindAmountofTimes = Math.floor(difference / remind);\n  let drinkAmount = Math.round((time.waterAmount * 1000) / remindAmountofTimes);\n  let totalDrank = drinkAmount * clickCount;\n\n  const handleReset = () => {\n    setReset(true)\n    setClickCount(prevClick => {\n      return ( prevClick + 1 )\n    })\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"drink-heading\">Drink up!</h1>\n      <CountdownTimer min1={minutes.min1} min2={minutes.min2} sec1={seconds.sec1} sec2={seconds.sec2} />\n      {currentHour >= time.endValue ? <TimerFinished waterAmount={time.waterAmount} totalDrank={totalDrank} difference={difference} /> : <TimerRunning waterAmount={time.waterAmount} difference={difference} drinkAmount={drinkAmount} /> }\n      <button className=\"drink-button\" onClick={handleReset}>I drank water! </button>\n      <Link to=\"/\"><button className=\"reset-button\">Start again</button></Link>\n      {currentHour >= time.endValue ? <p>Stop drinking water! You can reset again tomorrow</p> : <p>Keep drinking!!</p>}\n    </div>\n  )\n}\n\nexport default WaterPage;\n\n\n//If the timer only resets every time you click the button, there should be a point at the end time\n//when it stops calculating (ie.7pm) then displays how much water you drank based on the amount to drink each time\n//and the amount of times you click the button. \n//Also - an alarm that goes off when the times reaches 0\n//Fix the css of the countdown - add in a page flip\n//Sort out what happens when the timer reaches 0 with the water glass animation\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}