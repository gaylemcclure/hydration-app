{"ast":null,"code":"var _jsxFileName = \"/Users/gaylemcclure/Dev/water-app/src/routes/Questions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport Dropdown from '../components/Dropdown';\nimport Slider from '../components/Slider';\nimport { startTimes, endTimes, remindTimes } from '../times';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Questions(props, _ref) {\n  _s();\n\n  let {\n    label,\n    onSelectedChange\n  } = _ref;\n  const [sliderValue, setSliderValue] = useState(2);\n  const [open, setOpen] = useState(false);\n  const [selected, setSelected] = useState(\"-\");\n  const [time, setTime] = useState({\n    id: \"\",\n    start: \"12pm\",\n    end: \"\",\n    startValue: 0,\n    endValue: 0,\n    remindTime: \"\",\n    remindValue: 0,\n    total: 0\n  });\n  const ref = useRef();\n  useEffect(() => {\n    const onBodyClick = event => {\n      if (ref.current && ref.current.contains(event.target)) {\n        return;\n      }\n\n      setOpen(false);\n    };\n\n    document.body.addEventListener(\"click\", onBodyClick);\n    return () => {\n      document.body.removeEventListener(\"click\", onBodyClick);\n    };\n  }, []);\n  const makeStartTimes = startTimes.map(startTime => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      name: startTime.time,\n      value: startTime.value,\n      onClick: () => onSelectedChange(startTime),\n      children: startTime.time\n    }, startTime.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  });\n  const makeEndTimes = endTimes.map(endTime => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      name: endTime.time,\n      value: endTime.value,\n      onClick: () => onSelectedChange(endTime),\n      children: endTime.time\n    }, endTime.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  });\n  const makeRemindTimes = remindTimes.map(remindTime => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      name: remindTime.time,\n      value: remindTime.value,\n      onClick: () => onSelectedChange(remindTime.time),\n      children: remindTime.time\n    }, remindTime.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  });\n\n  function handleStartSelect(event) {\n    setTime(time => ({ ...time,\n      start: event.target[event.target.selectedIndex].label,\n      startValue: event.target.value\n    }));\n    console.log(event.target[event.target.selectedIndex].label);\n  }\n\n  function handleEndSelect(event) {\n    setTime(time => ({ ...time,\n      end: event.target[event.target.selectedIndex].label,\n      endValue: event.target.value,\n      total: time.endValue - time.startValue\n    }));\n  }\n\n  function handleRemindSelect(event) {\n    setTime(time => ({ ...time,\n      remindTime: event.target[event.target.selectedIndex].label,\n      remindValue: event.target.value\n    }));\n  }\n\n  function handleSlider(event) {\n    setSliderValue(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Start drinking water at..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      options: makeStartTimes,\n      change: handleStartSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stop drinking water at ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      options: makeEndTimes,\n      change: handleEndSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      sliderChange: handleSlider,\n      sliderValue: sliderValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Remind me every\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      options: makeRemindTimes,\n      change: handleRemindSelect,\n      onSelectedChange: setSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"get-started\",\n      onClick: props.drinkClick,\n      children: \"Start drinking!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Questions, \"coEO3ZScWiz7DDhYH2I491A1WJs=\");\n\n_c = Questions;\nexport default Questions; // export default () => {\n//   // state to manage dropdown selection\n//   const [selected, setSelected] = useState(dropdownOptions[0])\n//   return (\n//     <div>\n//       <Dropdown\n//         dropdownOptions={dropdownOptions}\n//         selected={selected}\n//         onSelectedChange={setSelected}\n//       />\n//     </div>\n//   )\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Dropdown","Slider","startTimes","endTimes","remindTimes","Questions","props","label","onSelectedChange","sliderValue","setSliderValue","open","setOpen","selected","setSelected","time","setTime","id","start","end","startValue","endValue","remindTime","remindValue","total","ref","onBodyClick","event","current","contains","target","document","body","addEventListener","removeEventListener","makeStartTimes","map","startTime","value","makeEndTimes","endTime","makeRemindTimes","handleStartSelect","selectedIndex","console","log","handleEndSelect","handleRemindSelect","handleSlider","drinkClick"],"sources":["/Users/gaylemcclure/Dev/water-app/src/routes/Questions.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Dropdown from '../components/Dropdown';\nimport Slider from '../components/Slider';\nimport { startTimes, endTimes, remindTimes } from '../times';\n\n\nfunction Questions(props, { label, onSelectedChange }) {\n\n  const [sliderValue, setSliderValue] = useState(2)\n  const [open, setOpen] = useState(false)\n  const [selected, setSelected] = useState(\"-\")\n  const [time, setTime] = useState({\n    id: \"\",\n    start: \"12pm\",\n    end: \"\",\n    startValue: 0,\n    endValue: 0,\n    remindTime: \"\",\n    remindValue: 0,\n    total: 0\n  })\n\n  const ref = useRef()\n\n  useEffect(() => {\n    const onBodyClick = event => {\n      if (ref.current && ref.current.contains(event.target)) {\n        return\n      }\n      setOpen(false)\n    }\n    document.body.addEventListener(\"click\", onBodyClick)\n    return () => {\n      document.body.removeEventListener(\"click\", onBodyClick)\n    }\n  }, [])\n\n  const makeStartTimes = startTimes.map(startTime => {\n    return (\n      <option \n        key={startTime.id} \n        name={startTime.time} \n        value={startTime.value}\n        onClick={() => onSelectedChange(startTime)}\n        >{startTime.time}</option>\n    )\n  })\n\n  const makeEndTimes = endTimes.map(endTime => {\n    return (\n      <option \n        key={endTime.id} \n        name={endTime.time} \n        value={endTime.value}\n        onClick={() => onSelectedChange(endTime)}\n        >{endTime.time}</option>\n    )\n  })\n\n  const makeRemindTimes = remindTimes.map(remindTime => {\n    return (\n      <option \n        key={remindTime.id} \n        name={remindTime.time} \n        value={remindTime.value}\n        onClick={() => onSelectedChange(remindTime.time)}\n        >{remindTime.time}</option>\n    )\n  })\n\n  function handleStartSelect(event) {\n    setTime(time => ({\n      ...time,\n      start: event.target[event.target.selectedIndex].label,\n      startValue: event.target.value\n    }));\n    console.log(event.target[event.target.selectedIndex].label)\n  }\n\n  function handleEndSelect(event) {\n    setTime(time => ({\n      ...time,\n      end: event.target[event.target.selectedIndex].label,\n      endValue: event.target.value,\n      total: (time.endValue - time.startValue)\n    }));\n    \n  }\n\n  \n\n  function handleRemindSelect(event) {\n    setTime(time => ({\n      ...time,\n      remindTime: event.target[event.target.selectedIndex].label,\n      remindValue: event.target.value,\n    }))\n  }\n\n  function handleSlider(event) {\n    setSliderValue(event.target.value)\n  }\n\n  return (\n    <>\n      <h2>Start drinking water at..</h2>\n      <Dropdown options={makeStartTimes} change={handleStartSelect}/>\n      <h2>Stop drinking water at ...</h2>\n      <Dropdown options={makeEndTimes} change={handleEndSelect} />\n      <Slider sliderChange={handleSlider} sliderValue={sliderValue}/>\n      <h2>Remind me every</h2>\n      <Dropdown options={makeRemindTimes} change={handleRemindSelect} onSelectedChange={setSelected}/>\n      {/* <h2>Start drinking at {time.start} and finish drinking at {time.end}</h2>\n      <h2>You want to drink {sliderValue} litres over {time.total} also {selected} hours and be reminded every {time.remindTime}</h2> */}\n      <button className=\"get-started\" onClick={props.drinkClick}>Start drinking!</button>\n    </>\n  )\n}\n\nexport default Questions;\n\n\n// export default () => {\n//   // state to manage dropdown selection\n//   const [selected, setSelected] = useState(dropdownOptions[0])\n\n//   return (\n//     <div>\n//       <Dropdown\n//         dropdownOptions={dropdownOptions}\n//         selected={selected}\n//         onSelectedChange={setSelected}\n//       />\n//     </div>\n//   )\n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}