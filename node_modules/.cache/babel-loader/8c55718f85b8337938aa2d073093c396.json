{"ast":null,"code":"var _jsxFileName = \"/Users/gaylemcclure/Dev/water-app/src/components/Timer.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport '../styles/timer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Timer(props) {\n  _s();\n\n  const [counter, setCounter] = useState(60);\n  const [minutes, setMinutes] = useState(29);\n  useEffect(() => {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n\n    if (counter === 0) {\n      setMinutes(minutes - 1);\n      setCounter(59);\n    }\n\n    if (minutes === 0) {\n      setMinutes(30);\n    }\n  }, [counter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    children: counter < 10 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Countdown: \", minutes, \":0\", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Countdown: \", minutes, \":\", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 66\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this); //Get minutes from the countdown state\n  //set seconds to 00\n  //count seconds from 00 > 59 and down to 00 again\n  //Each time the seconds hit 00, count a minute down\n  //Split the times into separate digits to put into a countdown\n}\n\n_s(Timer, \"DF8IoIX0aWiWuWEyb46Opc0PXr0=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","Timer","props","counter","setCounter","minutes","setMinutes","setTimeout"],"sources":["/Users/gaylemcclure/Dev/water-app/src/components/Timer.js"],"sourcesContent":["import { React, useState, useEffect } from 'react';\nimport '../styles/timer.css';\n\nfunction Timer(props) {\n\n  const [counter, setCounter] = useState(60);\n  const [minutes, setMinutes] = useState(29);\n\n  useEffect(() => {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n    if(counter === 0) {\n      setMinutes(minutes-1)\n      setCounter(59)\n    }\n    if (minutes === 0) {\n      setMinutes(30)\n    }\n\n  }, [counter]);\n\n  return (\n    <div className=\"timer\">\n    {counter < 10 ? <div>Countdown: {minutes}:0{counter}</div> : <div>Countdown: {minutes}:{counter}</div>} \n    </div>\n  );\n\n\n  \n\n//Get minutes from the countdown state\n//set seconds to 00\n//count seconds from 00 > 59 and down to 00 again\n//Each time the seconds hit 00, count a minute down\n//Split the times into separate digits to put into a countdown\n\n}\n\nexport default Timer;"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,qBAAP;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;EAAA;;EAEpB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACdG,OAAO,GAAG,CAAV,IAAeI,UAAU,CAAC,MAAMH,UAAU,CAACD,OAAO,GAAG,CAAX,CAAjB,EAAgC,IAAhC,CAAzB;;IACA,IAAGA,OAAO,KAAK,CAAf,EAAkB;MAChBG,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;MACAD,UAAU,CAAC,EAAD,CAAV;IACD;;IACD,IAAIC,OAAO,KAAK,CAAhB,EAAmB;MACjBC,UAAU,CAAC,EAAD,CAAV;IACD;EAEF,CAVQ,EAUN,CAACH,OAAD,CAVM,CAAT;EAYA,oBACE;IAAK,SAAS,EAAC,OAAf;IAAA,UACCA,OAAO,GAAG,EAAV,gBAAe;MAAA,0BAAiBE,OAAjB,QAA4BF,OAA5B;IAAA;MAAA;MAAA;MAAA;IAAA,QAAf,gBAA4D;MAAA,0BAAiBE,OAAjB,OAA2BF,OAA3B;IAAA;MAAA;MAAA;MAAA;IAAA;EAD7D;IAAA;IAAA;IAAA;EAAA,QADF,CAjBoB,CA0BtB;EACA;EACA;EACA;EACA;AAEC;;GAhCQF,K;;KAAAA,K;AAkCT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}