{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/resizable.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getOuterWidth, getOuterHeight, getInnerWidth, getInnerHeight, getWidth, getHeight } from \"../core/utils/size\";\nimport { locate, move } from \"../animation/translator\";\nimport registerComponent from \"../core/component_registrator\";\nimport DOMComponent from \"../core/dom_component\";\nimport $ from \"../core/renderer\";\nimport { inArray } from \"../core/utils/array\";\nimport { pairToObject } from \"../core/utils/common\";\nimport { extend } from \"../core/utils/extend\";\nimport { each } from \"../core/utils/iterator\";\nimport { fitIntoRange, inRange } from \"../core/utils/math\";\nimport { isPlainObject, isFunction, isWindow } from \"../core/utils/type\";\nimport { hasWindow } from \"../core/utils/window\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport { start as dragEventStart, move as dragEventMove, end as dragEventEnd } from \"../events/drag\";\nimport { addNamespace } from \"../events/utils/index\";\nimport { triggerResizeEvent } from \"../events/visibility_change\";\nvar RESIZABLE = \"dxResizable\";\nvar RESIZABLE_CLASS = \"dx-resizable\";\nvar RESIZABLE_RESIZING_CLASS = \"dx-resizable-resizing\";\nvar RESIZABLE_HANDLE_CLASS = \"dx-resizable-handle\";\nvar RESIZABLE_HANDLE_TOP_CLASS = \"dx-resizable-handle-top\";\nvar RESIZABLE_HANDLE_BOTTOM_CLASS = \"dx-resizable-handle-bottom\";\nvar RESIZABLE_HANDLE_LEFT_CLASS = \"dx-resizable-handle-left\";\nvar RESIZABLE_HANDLE_RIGHT_CLASS = \"dx-resizable-handle-right\";\nvar RESIZABLE_HANDLE_CORNER_CLASS = \"dx-resizable-handle-corner\";\nvar DRAGSTART_START_EVENT_NAME = addNamespace(dragEventStart, RESIZABLE);\nvar DRAGSTART_EVENT_NAME = addNamespace(dragEventMove, RESIZABLE);\nvar DRAGSTART_END_EVENT_NAME = addNamespace(dragEventEnd, RESIZABLE);\nvar SIDE_BORDER_WIDTH_STYLES = {\n  left: \"borderLeftWidth\",\n  top: \"borderTopWidth\",\n  right: \"borderRightWidth\",\n  bottom: \"borderBottomWidth\"\n};\nvar Resizable = DOMComponent.inherit({\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      handles: \"all\",\n      step: \"1\",\n      stepPrecision: \"simple\",\n      area: void 0,\n      minWidth: 30,\n      maxWidth: 1 / 0,\n      minHeight: 30,\n      maxHeight: 1 / 0,\n      onResizeStart: null,\n      onResize: null,\n      onResizeEnd: null,\n      roundStepValue: true,\n      _keepAspectRatio: false\n    });\n  },\n  _init: function () {\n    this.callBase();\n    this.$element().addClass(RESIZABLE_CLASS);\n  },\n  _initMarkup: function () {\n    this.callBase();\n\n    this._renderHandles();\n  },\n  _render: function () {\n    this.callBase();\n\n    this._renderActions();\n  },\n  _renderActions: function () {\n    this._resizeStartAction = this._createActionByOption(\"onResizeStart\");\n    this._resizeEndAction = this._createActionByOption(\"onResizeEnd\");\n    this._resizeAction = this._createActionByOption(\"onResize\");\n  },\n  _renderHandles: function () {\n    this._handles = [];\n    var handles = this.option(\"handles\");\n\n    if (\"none\" === handles) {\n      return;\n    }\n\n    var directions = \"all\" === handles ? [\"top\", \"bottom\", \"left\", \"right\"] : handles.split(\" \");\n    each(directions, (index, handleName) => {\n      this._renderHandle(handleName);\n    });\n    inArray(\"bottom\", directions) + 1 && inArray(\"right\", directions) + 1 && this._renderHandle(\"corner-bottom-right\");\n    inArray(\"bottom\", directions) + 1 && inArray(\"left\", directions) + 1 && this._renderHandle(\"corner-bottom-left\");\n    inArray(\"top\", directions) + 1 && inArray(\"right\", directions) + 1 && this._renderHandle(\"corner-top-right\");\n    inArray(\"top\", directions) + 1 && inArray(\"left\", directions) + 1 && this._renderHandle(\"corner-top-left\");\n\n    this._attachEventHandlers();\n  },\n  _renderHandle: function (handleName) {\n    var $handle = $(\"<div>\").addClass(RESIZABLE_HANDLE_CLASS).addClass(RESIZABLE_HANDLE_CLASS + \"-\" + handleName).appendTo(this.$element());\n\n    this._handles.push($handle);\n  },\n  _attachEventHandlers: function () {\n    if (this.option(\"disabled\")) {\n      return;\n    }\n\n    var handlers = {};\n    handlers[DRAGSTART_START_EVENT_NAME] = this._dragStartHandler.bind(this);\n    handlers[DRAGSTART_EVENT_NAME] = this._dragHandler.bind(this);\n    handlers[DRAGSTART_END_EVENT_NAME] = this._dragEndHandler.bind(this);\n\n    this._handles.forEach(handleElement => {\n      eventsEngine.on(handleElement, handlers, {\n        direction: \"both\",\n        immediate: true\n      });\n    });\n  },\n  _detachEventHandlers: function () {\n    this._handles.forEach(handleElement => {\n      eventsEngine.off(handleElement);\n    });\n  },\n  _toggleEventHandlers: function (shouldAttachEvents) {\n    shouldAttachEvents ? this._attachEventHandlers() : this._detachEventHandlers();\n  },\n  _getElementSize: function () {\n    var $element = this.$element();\n    return \"border-box\" === $element.css(\"boxSizing\") ? {\n      width: getOuterWidth($element),\n      height: getOuterHeight($element)\n    } : {\n      width: getWidth($element),\n      height: getHeight($element)\n    };\n  },\n  _dragStartHandler: function (e) {\n    var $element = this.$element();\n\n    if ($element.is(\".dx-state-disabled, .dx-state-disabled *\")) {\n      e.cancel = true;\n      return;\n    }\n\n    this._toggleResizingClass(true);\n\n    this._movingSides = this._getMovingSides(e);\n    this._elementLocation = locate($element);\n    this._elementSize = this._getElementSize();\n\n    this._renderDragOffsets(e);\n\n    this._resizeStartAction({\n      event: e,\n      width: this._elementSize.width,\n      height: this._elementSize.height,\n      handles: this._movingSides\n    });\n\n    e.targetElements = null;\n  },\n  _toggleResizingClass: function (value) {\n    this.$element().toggleClass(RESIZABLE_RESIZING_CLASS, value);\n  },\n  _renderDragOffsets: function (e) {\n    var area = this._getArea();\n\n    if (!area) {\n      return;\n    }\n\n    var $handle = $(e.target).closest(\".\" + RESIZABLE_HANDLE_CLASS);\n    var handleWidth = getOuterWidth($handle);\n    var handleHeight = getOuterHeight($handle);\n    var handleOffset = $handle.offset();\n    var areaOffset = area.offset;\n\n    var scrollOffset = this._getAreaScrollOffset();\n\n    e.maxLeftOffset = this._leftMaxOffset = handleOffset.left - areaOffset.left - scrollOffset.scrollX;\n    e.maxRightOffset = this._rightMaxOffset = areaOffset.left + area.width - handleOffset.left - handleWidth + scrollOffset.scrollX;\n    e.maxTopOffset = this._topMaxOffset = handleOffset.top - areaOffset.top - scrollOffset.scrollY;\n    e.maxBottomOffset = this._bottomMaxOffset = areaOffset.top + area.height - handleOffset.top - handleHeight + scrollOffset.scrollY;\n  },\n  _getBorderWidth: function ($element, direction) {\n    if (isWindow($element.get(0))) {\n      return 0;\n    }\n\n    var borderWidth = $element.css(SIDE_BORDER_WIDTH_STYLES[direction]);\n    return parseInt(borderWidth) || 0;\n  },\n  _proportionate: function (direction, value) {\n    var size = this._elementSize;\n    var factor = \"x\" === direction ? size.width / size.height : size.height / size.width;\n    return value * factor;\n  },\n  _getProportionalDelta: function (_ref) {\n    var {\n      x: x,\n      y: y\n    } = _ref;\n\n    var proportionalY = this._proportionate(\"y\", x);\n\n    if (proportionalY >= y) {\n      return {\n        x: x,\n        y: proportionalY\n      };\n    }\n\n    var proportionalX = this._proportionate(\"x\", y);\n\n    if (proportionalX >= x) {\n      return {\n        x: proportionalX,\n        y: y\n      };\n    }\n\n    return {\n      x: 0,\n      y: 0\n    };\n  },\n  _getDirectionName: function (axis) {\n    var sides = this._movingSides;\n\n    if (\"x\" === axis) {\n      return sides.left ? \"left\" : \"right\";\n    } else {\n      return sides.top ? \"top\" : \"bottom\";\n    }\n  },\n  _fitIntoArea: function (axis, value) {\n    var _this$;\n\n    var directionName = this._getDirectionName(axis);\n\n    return Math.min(value, null !== (_this$ = this[\"_\".concat(directionName, \"MaxOffset\")]) && void 0 !== _this$ ? _this$ : 1 / 0);\n  },\n  _fitDeltaProportionally: function (delta) {\n    var fittedDelta = _extends({}, delta);\n\n    var size = this._elementSize;\n    var {\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxWidth: maxWidth,\n      maxHeight: maxHeight\n    } = this.option();\n\n    var getWidth = () => size.width + fittedDelta.x;\n\n    var getHeight = () => size.height + fittedDelta.y;\n\n    var isInArea = axis => fittedDelta[axis] === this._fitIntoArea(axis, fittedDelta[axis]);\n\n    var isFittedX = () => inRange(getWidth(), minWidth, maxWidth) && isInArea(\"x\");\n\n    var isFittedY = () => inRange(getHeight(), minHeight, maxHeight) && isInArea(\"y\");\n\n    if (!isFittedX()) {\n      var x = this._fitIntoArea(\"x\", fitIntoRange(getWidth(), minWidth, maxWidth) - size.width);\n\n      fittedDelta = {\n        x: x,\n        y: this._proportionate(\"y\", x)\n      };\n    }\n\n    if (!isFittedY()) {\n      var y = this._fitIntoArea(\"y\", fitIntoRange(getHeight(), minHeight, maxHeight) - size.height);\n\n      fittedDelta = {\n        x: this._proportionate(\"x\", y),\n        y: y\n      };\n    }\n\n    return isFittedX() && isFittedY() ? fittedDelta : {\n      x: 0,\n      y: 0\n    };\n  },\n  _fitDelta: function (_ref2) {\n    var {\n      x: x,\n      y: y\n    } = _ref2;\n    var size = this._elementSize;\n    var {\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxWidth: maxWidth,\n      maxHeight: maxHeight\n    } = this.option();\n    return {\n      x: fitIntoRange(size.width + x, minWidth, maxWidth) - size.width,\n      y: fitIntoRange(size.height + y, minHeight, maxHeight) - size.height\n    };\n  },\n  _getDeltaByOffset: function (offset) {\n    var sides = this._movingSides;\n    var shouldKeepAspectRatio = this._isCornerHandler(sides) && this.option(\"_keepAspectRatio\");\n    var delta = {\n      x: offset.x * (sides.left ? -1 : 1),\n      y: offset.y * (sides.top ? -1 : 1)\n    };\n\n    if (shouldKeepAspectRatio) {\n      var proportionalDelta = this._getProportionalDelta(delta);\n\n      var fittedProportionalDelta = this._fitDeltaProportionally(proportionalDelta);\n\n      delta = fittedProportionalDelta;\n    } else {\n      var fittedDelta = this._fitDelta(delta);\n\n      var roundedFittedDelta = this._roundByStep(fittedDelta);\n\n      delta = roundedFittedDelta;\n    }\n\n    return delta;\n  },\n  _updatePosition: function (delta, _ref3) {\n    var {\n      width: width,\n      height: height\n    } = _ref3;\n    var location = this._elementLocation;\n    var sides = this._movingSides;\n    var $element = this.$element();\n\n    var elementRect = this._getElementSize();\n\n    var offsetTop = delta.y * (sides.top ? -1 : 1) - ((elementRect.height || height) - height);\n    var offsetLeft = delta.x * (sides.left ? -1 : 1) - ((elementRect.width || width) - width);\n    move($element, {\n      top: location.top + (sides.top ? offsetTop : 0),\n      left: location.left + (sides.left ? offsetLeft : 0)\n    });\n  },\n  _dragHandler: function (e) {\n    var offset = this._getOffset(e);\n\n    var delta = this._getDeltaByOffset(offset);\n\n    var dimensions = this._updateDimensions(delta);\n\n    this._updatePosition(delta, dimensions);\n\n    this._triggerResizeAction(e, dimensions);\n  },\n  _updateDimensions: function (delta) {\n    var isAbsoluteSize = size => \"px\" === size.substring(size.length - 2);\n\n    var isStepPrecisionStrict = \"strict\" === this.option(\"stepPrecision\");\n    var size = this._elementSize;\n    var width = size.width + delta.x;\n    var height = size.height + delta.y;\n    var elementStyle = this.$element().get(0).style;\n    var shouldRenderWidth = delta.x || isStepPrecisionStrict || isAbsoluteSize(elementStyle.width);\n    var shouldRenderHeight = delta.y || isStepPrecisionStrict || isAbsoluteSize(elementStyle.height);\n\n    if (shouldRenderWidth) {\n      this.option({\n        width: width\n      });\n    }\n\n    if (shouldRenderHeight) {\n      this.option({\n        height: height\n      });\n    }\n\n    return {\n      width: shouldRenderWidth ? width : size.width,\n      height: shouldRenderHeight ? height : size.height\n    };\n  },\n  _triggerResizeAction: function (e, _ref4) {\n    var {\n      width: width,\n      height: height\n    } = _ref4;\n\n    this._resizeAction({\n      event: e,\n      width: this.option(\"width\") || width,\n      height: this.option(\"height\") || height,\n      handles: this._movingSides\n    });\n\n    triggerResizeEvent(this.$element());\n  },\n  _isCornerHandler: sides => 0 === Object.values(sides).reduce((xor, value) => xor ^ value, 0),\n  _getOffset: function (e) {\n    var offset = e.offset;\n    var sides = this._movingSides;\n\n    if (!sides.left && !sides.right) {\n      offset.x = 0;\n    }\n\n    if (!sides.top && !sides.bottom) {\n      offset.y = 0;\n    }\n\n    return offset;\n  },\n  _roundByStep: function (delta) {\n    return \"strict\" === this.option(\"stepPrecision\") ? this._roundStrict(delta) : this._roundNotStrict(delta);\n  },\n  _getSteps: function () {\n    return pairToObject(this.option(\"step\"), !this.option(\"roundStepValue\"));\n  },\n  _roundNotStrict: function (delta) {\n    var steps = this._getSteps();\n\n    return {\n      x: delta.x - delta.x % steps.h,\n      y: delta.y - delta.y % steps.v\n    };\n  },\n  _roundStrict: function (delta) {\n    var sides = this._movingSides;\n    var offset = {\n      x: delta.x * (sides.left ? -1 : 1),\n      y: delta.y * (sides.top ? -1 : 1)\n    };\n\n    var steps = this._getSteps();\n\n    var location = this._elementLocation;\n    var size = this._elementSize;\n    var xPos = sides.left ? location.left : location.left + size.width;\n    var yPos = sides.top ? location.top : location.top + size.height;\n    var newXShift = (xPos + offset.x) % steps.h;\n    var newYShift = (yPos + offset.y) % steps.v;\n\n    var sign = Math.sign || (x => {\n      x = +x;\n\n      if (0 === x || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    });\n\n    var separatorOffset = (steps, offset) => (1 + .2 * sign(offset)) % 1 * steps;\n\n    var isSmallOffset = (offset, steps) => Math.abs(offset) < .2 * steps;\n\n    var newOffsetX = offset.x - newXShift;\n    var newOffsetY = offset.y - newYShift;\n\n    if (newXShift > separatorOffset(steps.h, offset.x)) {\n      newOffsetX += steps.h;\n    }\n\n    if (newYShift > separatorOffset(steps.v, offset.y)) {\n      newOffsetY += steps.v;\n    }\n\n    var roundedOffset_x = (sides.left || sides.right) && !isSmallOffset(offset.x, steps.h) ? newOffsetX : 0,\n        roundedOffset_y = (sides.top || sides.bottom) && !isSmallOffset(offset.y, steps.v) ? newOffsetY : 0;\n    return {\n      x: roundedOffset_x * (sides.left ? -1 : 1),\n      y: roundedOffset_y * (sides.top ? -1 : 1)\n    };\n  },\n  _getMovingSides: function (e) {\n    var $target = $(e.target);\n    var hasCornerTopLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-left\");\n    var hasCornerTopRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-right\");\n    var hasCornerBottomLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-left\");\n    var hasCornerBottomRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-right\");\n    return {\n      top: $target.hasClass(RESIZABLE_HANDLE_TOP_CLASS) || hasCornerTopLeftClass || hasCornerTopRightClass,\n      left: $target.hasClass(RESIZABLE_HANDLE_LEFT_CLASS) || hasCornerTopLeftClass || hasCornerBottomLeftClass,\n      bottom: $target.hasClass(RESIZABLE_HANDLE_BOTTOM_CLASS) || hasCornerBottomLeftClass || hasCornerBottomRightClass,\n      right: $target.hasClass(RESIZABLE_HANDLE_RIGHT_CLASS) || hasCornerTopRightClass || hasCornerBottomRightClass\n    };\n  },\n  _getArea: function () {\n    var area = this.option(\"area\");\n\n    if (isFunction(area)) {\n      area = area.call(this);\n    }\n\n    if (isPlainObject(area)) {\n      return this._getAreaFromObject(area);\n    }\n\n    return this._getAreaFromElement(area);\n  },\n  _getAreaScrollOffset: function () {\n    var area = this.option(\"area\");\n    var isElement = !isFunction(area) && !isPlainObject(area);\n    var scrollOffset = {\n      scrollY: 0,\n      scrollX: 0\n    };\n\n    if (isElement) {\n      var areaElement = $(area)[0];\n\n      if (isWindow(areaElement)) {\n        scrollOffset.scrollX = areaElement.pageXOffset;\n        scrollOffset.scrollY = areaElement.pageYOffset;\n      }\n    }\n\n    return scrollOffset;\n  },\n  _getAreaFromObject: function (area) {\n    var result = {\n      width: area.right - area.left,\n      height: area.bottom - area.top,\n      offset: {\n        left: area.left,\n        top: area.top\n      }\n    };\n\n    this._correctAreaGeometry(result);\n\n    return result;\n  },\n  _getAreaFromElement: function (area) {\n    var $area = $(area);\n    var result;\n\n    if ($area.length) {\n      result = {\n        width: getInnerWidth($area),\n        height: getInnerHeight($area),\n        offset: extend({\n          top: 0,\n          left: 0\n        }, isWindow($area[0]) ? {} : $area.offset())\n      };\n\n      this._correctAreaGeometry(result, $area);\n    }\n\n    return result;\n  },\n  _correctAreaGeometry: function (result, $area) {\n    var areaBorderLeft = $area ? this._getBorderWidth($area, \"left\") : 0;\n    var areaBorderTop = $area ? this._getBorderWidth($area, \"top\") : 0;\n    result.offset.left += areaBorderLeft + this._getBorderWidth(this.$element(), \"left\");\n    result.offset.top += areaBorderTop + this._getBorderWidth(this.$element(), \"top\");\n    result.width -= getOuterWidth(this.$element()) - getInnerWidth(this.$element());\n    result.height -= getOuterHeight(this.$element()) - getInnerHeight(this.$element());\n  },\n  _dragEndHandler: function (e) {\n    var $element = this.$element();\n\n    this._resizeEndAction({\n      event: e,\n      width: getOuterWidth($element),\n      height: getOuterHeight($element),\n      handles: this._movingSides\n    });\n\n    this._toggleResizingClass(false);\n  },\n  _renderWidth: function (width) {\n    this.option(\"width\", fitIntoRange(width, this.option(\"minWidth\"), this.option(\"maxWidth\")));\n  },\n  _renderHeight: function (height) {\n    this.option(\"height\", fitIntoRange(height, this.option(\"minHeight\"), this.option(\"maxHeight\")));\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"disabled\":\n        this._toggleEventHandlers(!args.value);\n\n        this.callBase(args);\n        break;\n\n      case \"handles\":\n        this._invalidate();\n\n        break;\n\n      case \"minWidth\":\n      case \"maxWidth\":\n        hasWindow() && this._renderWidth(getOuterWidth(this.$element()));\n        break;\n\n      case \"minHeight\":\n      case \"maxHeight\":\n        hasWindow() && this._renderHeight(getOuterHeight(this.$element()));\n        break;\n\n      case \"onResize\":\n      case \"onResizeStart\":\n      case \"onResizeEnd\":\n        this._renderActions();\n\n        break;\n\n      case \"area\":\n      case \"stepPrecision\":\n      case \"step\":\n      case \"roundStepValue\":\n      case \"_keepAspectRatio\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _clean: function () {\n    this.$element().find(\".\" + RESIZABLE_HANDLE_CLASS).remove();\n  },\n  _useTemplates: function () {\n    return false;\n  }\n});\nregisterComponent(RESIZABLE, Resizable);\nexport default Resizable;","map":{"version":3,"names":["_extends","getOuterWidth","getOuterHeight","getInnerWidth","getInnerHeight","getWidth","getHeight","locate","move","registerComponent","DOMComponent","$","inArray","pairToObject","extend","each","fitIntoRange","inRange","isPlainObject","isFunction","isWindow","hasWindow","eventsEngine","start","dragEventStart","dragEventMove","end","dragEventEnd","addNamespace","triggerResizeEvent","RESIZABLE","RESIZABLE_CLASS","RESIZABLE_RESIZING_CLASS","RESIZABLE_HANDLE_CLASS","RESIZABLE_HANDLE_TOP_CLASS","RESIZABLE_HANDLE_BOTTOM_CLASS","RESIZABLE_HANDLE_LEFT_CLASS","RESIZABLE_HANDLE_RIGHT_CLASS","RESIZABLE_HANDLE_CORNER_CLASS","DRAGSTART_START_EVENT_NAME","DRAGSTART_EVENT_NAME","DRAGSTART_END_EVENT_NAME","SIDE_BORDER_WIDTH_STYLES","left","top","right","bottom","Resizable","inherit","_getDefaultOptions","callBase","handles","step","stepPrecision","area","minWidth","maxWidth","minHeight","maxHeight","onResizeStart","onResize","onResizeEnd","roundStepValue","_keepAspectRatio","_init","$element","addClass","_initMarkup","_renderHandles","_render","_renderActions","_resizeStartAction","_createActionByOption","_resizeEndAction","_resizeAction","_handles","option","directions","split","index","handleName","_renderHandle","_attachEventHandlers","$handle","appendTo","push","handlers","_dragStartHandler","bind","_dragHandler","_dragEndHandler","forEach","handleElement","on","direction","immediate","_detachEventHandlers","off","_toggleEventHandlers","shouldAttachEvents","_getElementSize","css","width","height","e","is","cancel","_toggleResizingClass","_movingSides","_getMovingSides","_elementLocation","_elementSize","_renderDragOffsets","event","targetElements","value","toggleClass","_getArea","target","closest","handleWidth","handleHeight","handleOffset","offset","areaOffset","scrollOffset","_getAreaScrollOffset","maxLeftOffset","_leftMaxOffset","scrollX","maxRightOffset","_rightMaxOffset","maxTopOffset","_topMaxOffset","scrollY","maxBottomOffset","_bottomMaxOffset","_getBorderWidth","get","borderWidth","parseInt","_proportionate","size","factor","_getProportionalDelta","_ref","x","y","proportionalY","proportionalX","_getDirectionName","axis","sides","_fitIntoArea","_this$","directionName","Math","min","concat","_fitDeltaProportionally","delta","fittedDelta","isInArea","isFittedX","isFittedY","_fitDelta","_ref2","_getDeltaByOffset","shouldKeepAspectRatio","_isCornerHandler","proportionalDelta","fittedProportionalDelta","roundedFittedDelta","_roundByStep","_updatePosition","_ref3","location","elementRect","offsetTop","offsetLeft","_getOffset","dimensions","_updateDimensions","_triggerResizeAction","isAbsoluteSize","substring","length","isStepPrecisionStrict","elementStyle","style","shouldRenderWidth","shouldRenderHeight","_ref4","Object","values","reduce","xor","_roundStrict","_roundNotStrict","_getSteps","steps","h","v","xPos","yPos","newXShift","newYShift","sign","isNaN","separatorOffset","isSmallOffset","abs","newOffsetX","newOffsetY","roundedOffset_x","roundedOffset_y","$target","hasCornerTopLeftClass","hasClass","hasCornerTopRightClass","hasCornerBottomLeftClass","hasCornerBottomRightClass","call","_getAreaFromObject","_getAreaFromElement","isElement","areaElement","pageXOffset","pageYOffset","result","_correctAreaGeometry","$area","areaBorderLeft","areaBorderTop","_renderWidth","_renderHeight","_optionChanged","args","name","_invalidate","_clean","find","remove","_useTemplates"],"sources":["/Users/gaylemcclure/Dev/water-app/node_modules/devextreme/esm/ui/resizable.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/resizable.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    getOuterWidth,\r\n    getOuterHeight,\r\n    getInnerWidth,\r\n    getInnerHeight,\r\n    getWidth,\r\n    getHeight\r\n} from \"../core/utils/size\";\r\nimport {\r\n    locate,\r\n    move\r\n} from \"../animation/translator\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport DOMComponent from \"../core/dom_component\";\r\nimport $ from \"../core/renderer\";\r\nimport {\r\n    inArray\r\n} from \"../core/utils/array\";\r\nimport {\r\n    pairToObject\r\n} from \"../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    fitIntoRange,\r\n    inRange\r\n} from \"../core/utils/math\";\r\nimport {\r\n    isPlainObject,\r\n    isFunction,\r\n    isWindow\r\n} from \"../core/utils/type\";\r\nimport {\r\n    hasWindow\r\n} from \"../core/utils/window\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport {\r\n    start as dragEventStart,\r\n    move as dragEventMove,\r\n    end as dragEventEnd\r\n} from \"../events/drag\";\r\nimport {\r\n    addNamespace\r\n} from \"../events/utils/index\";\r\nimport {\r\n    triggerResizeEvent\r\n} from \"../events/visibility_change\";\r\nvar RESIZABLE = \"dxResizable\";\r\nvar RESIZABLE_CLASS = \"dx-resizable\";\r\nvar RESIZABLE_RESIZING_CLASS = \"dx-resizable-resizing\";\r\nvar RESIZABLE_HANDLE_CLASS = \"dx-resizable-handle\";\r\nvar RESIZABLE_HANDLE_TOP_CLASS = \"dx-resizable-handle-top\";\r\nvar RESIZABLE_HANDLE_BOTTOM_CLASS = \"dx-resizable-handle-bottom\";\r\nvar RESIZABLE_HANDLE_LEFT_CLASS = \"dx-resizable-handle-left\";\r\nvar RESIZABLE_HANDLE_RIGHT_CLASS = \"dx-resizable-handle-right\";\r\nvar RESIZABLE_HANDLE_CORNER_CLASS = \"dx-resizable-handle-corner\";\r\nvar DRAGSTART_START_EVENT_NAME = addNamespace(dragEventStart, RESIZABLE);\r\nvar DRAGSTART_EVENT_NAME = addNamespace(dragEventMove, RESIZABLE);\r\nvar DRAGSTART_END_EVENT_NAME = addNamespace(dragEventEnd, RESIZABLE);\r\nvar SIDE_BORDER_WIDTH_STYLES = {\r\n    left: \"borderLeftWidth\",\r\n    top: \"borderTopWidth\",\r\n    right: \"borderRightWidth\",\r\n    bottom: \"borderBottomWidth\"\r\n};\r\nvar Resizable = DOMComponent.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            handles: \"all\",\r\n            step: \"1\",\r\n            stepPrecision: \"simple\",\r\n            area: void 0,\r\n            minWidth: 30,\r\n            maxWidth: 1 / 0,\r\n            minHeight: 30,\r\n            maxHeight: 1 / 0,\r\n            onResizeStart: null,\r\n            onResize: null,\r\n            onResizeEnd: null,\r\n            roundStepValue: true,\r\n            _keepAspectRatio: false\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(RESIZABLE_CLASS)\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._renderHandles()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderActions()\r\n    },\r\n    _renderActions: function() {\r\n        this._resizeStartAction = this._createActionByOption(\"onResizeStart\");\r\n        this._resizeEndAction = this._createActionByOption(\"onResizeEnd\");\r\n        this._resizeAction = this._createActionByOption(\"onResize\")\r\n    },\r\n    _renderHandles: function() {\r\n        this._handles = [];\r\n        var handles = this.option(\"handles\");\r\n        if (\"none\" === handles) {\r\n            return\r\n        }\r\n        var directions = \"all\" === handles ? [\"top\", \"bottom\", \"left\", \"right\"] : handles.split(\" \");\r\n        each(directions, (index, handleName) => {\r\n            this._renderHandle(handleName)\r\n        });\r\n        inArray(\"bottom\", directions) + 1 && inArray(\"right\", directions) + 1 && this._renderHandle(\"corner-bottom-right\");\r\n        inArray(\"bottom\", directions) + 1 && inArray(\"left\", directions) + 1 && this._renderHandle(\"corner-bottom-left\");\r\n        inArray(\"top\", directions) + 1 && inArray(\"right\", directions) + 1 && this._renderHandle(\"corner-top-right\");\r\n        inArray(\"top\", directions) + 1 && inArray(\"left\", directions) + 1 && this._renderHandle(\"corner-top-left\");\r\n        this._attachEventHandlers()\r\n    },\r\n    _renderHandle: function(handleName) {\r\n        var $handle = $(\"<div>\").addClass(RESIZABLE_HANDLE_CLASS).addClass(RESIZABLE_HANDLE_CLASS + \"-\" + handleName).appendTo(this.$element());\r\n        this._handles.push($handle)\r\n    },\r\n    _attachEventHandlers: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        var handlers = {};\r\n        handlers[DRAGSTART_START_EVENT_NAME] = this._dragStartHandler.bind(this);\r\n        handlers[DRAGSTART_EVENT_NAME] = this._dragHandler.bind(this);\r\n        handlers[DRAGSTART_END_EVENT_NAME] = this._dragEndHandler.bind(this);\r\n        this._handles.forEach(handleElement => {\r\n            eventsEngine.on(handleElement, handlers, {\r\n                direction: \"both\",\r\n                immediate: true\r\n            })\r\n        })\r\n    },\r\n    _detachEventHandlers: function() {\r\n        this._handles.forEach(handleElement => {\r\n            eventsEngine.off(handleElement)\r\n        })\r\n    },\r\n    _toggleEventHandlers: function(shouldAttachEvents) {\r\n        shouldAttachEvents ? this._attachEventHandlers() : this._detachEventHandlers()\r\n    },\r\n    _getElementSize: function() {\r\n        var $element = this.$element();\r\n        return \"border-box\" === $element.css(\"boxSizing\") ? {\r\n            width: getOuterWidth($element),\r\n            height: getOuterHeight($element)\r\n        } : {\r\n            width: getWidth($element),\r\n            height: getHeight($element)\r\n        }\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        var $element = this.$element();\r\n        if ($element.is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        this._toggleResizingClass(true);\r\n        this._movingSides = this._getMovingSides(e);\r\n        this._elementLocation = locate($element);\r\n        this._elementSize = this._getElementSize();\r\n        this._renderDragOffsets(e);\r\n        this._resizeStartAction({\r\n            event: e,\r\n            width: this._elementSize.width,\r\n            height: this._elementSize.height,\r\n            handles: this._movingSides\r\n        });\r\n        e.targetElements = null\r\n    },\r\n    _toggleResizingClass: function(value) {\r\n        this.$element().toggleClass(RESIZABLE_RESIZING_CLASS, value)\r\n    },\r\n    _renderDragOffsets: function(e) {\r\n        var area = this._getArea();\r\n        if (!area) {\r\n            return\r\n        }\r\n        var $handle = $(e.target).closest(\".\" + RESIZABLE_HANDLE_CLASS);\r\n        var handleWidth = getOuterWidth($handle);\r\n        var handleHeight = getOuterHeight($handle);\r\n        var handleOffset = $handle.offset();\r\n        var areaOffset = area.offset;\r\n        var scrollOffset = this._getAreaScrollOffset();\r\n        e.maxLeftOffset = this._leftMaxOffset = handleOffset.left - areaOffset.left - scrollOffset.scrollX;\r\n        e.maxRightOffset = this._rightMaxOffset = areaOffset.left + area.width - handleOffset.left - handleWidth + scrollOffset.scrollX;\r\n        e.maxTopOffset = this._topMaxOffset = handleOffset.top - areaOffset.top - scrollOffset.scrollY;\r\n        e.maxBottomOffset = this._bottomMaxOffset = areaOffset.top + area.height - handleOffset.top - handleHeight + scrollOffset.scrollY\r\n    },\r\n    _getBorderWidth: function($element, direction) {\r\n        if (isWindow($element.get(0))) {\r\n            return 0\r\n        }\r\n        var borderWidth = $element.css(SIDE_BORDER_WIDTH_STYLES[direction]);\r\n        return parseInt(borderWidth) || 0\r\n    },\r\n    _proportionate: function(direction, value) {\r\n        var size = this._elementSize;\r\n        var factor = \"x\" === direction ? size.width / size.height : size.height / size.width;\r\n        return value * factor\r\n    },\r\n    _getProportionalDelta: function(_ref) {\r\n        var {\r\n            x: x,\r\n            y: y\r\n        } = _ref;\r\n        var proportionalY = this._proportionate(\"y\", x);\r\n        if (proportionalY >= y) {\r\n            return {\r\n                x: x,\r\n                y: proportionalY\r\n            }\r\n        }\r\n        var proportionalX = this._proportionate(\"x\", y);\r\n        if (proportionalX >= x) {\r\n            return {\r\n                x: proportionalX,\r\n                y: y\r\n            }\r\n        }\r\n        return {\r\n            x: 0,\r\n            y: 0\r\n        }\r\n    },\r\n    _getDirectionName: function(axis) {\r\n        var sides = this._movingSides;\r\n        if (\"x\" === axis) {\r\n            return sides.left ? \"left\" : \"right\"\r\n        } else {\r\n            return sides.top ? \"top\" : \"bottom\"\r\n        }\r\n    },\r\n    _fitIntoArea: function(axis, value) {\r\n        var _this$;\r\n        var directionName = this._getDirectionName(axis);\r\n        return Math.min(value, null !== (_this$ = this[\"_\".concat(directionName, \"MaxOffset\")]) && void 0 !== _this$ ? _this$ : 1 / 0)\r\n    },\r\n    _fitDeltaProportionally: function(delta) {\r\n        var fittedDelta = _extends({}, delta);\r\n        var size = this._elementSize;\r\n        var {\r\n            minWidth: minWidth,\r\n            minHeight: minHeight,\r\n            maxWidth: maxWidth,\r\n            maxHeight: maxHeight\r\n        } = this.option();\r\n        var getWidth = () => size.width + fittedDelta.x;\r\n        var getHeight = () => size.height + fittedDelta.y;\r\n        var isInArea = axis => fittedDelta[axis] === this._fitIntoArea(axis, fittedDelta[axis]);\r\n        var isFittedX = () => inRange(getWidth(), minWidth, maxWidth) && isInArea(\"x\");\r\n        var isFittedY = () => inRange(getHeight(), minHeight, maxHeight) && isInArea(\"y\");\r\n        if (!isFittedX()) {\r\n            var x = this._fitIntoArea(\"x\", fitIntoRange(getWidth(), minWidth, maxWidth) - size.width);\r\n            fittedDelta = {\r\n                x: x,\r\n                y: this._proportionate(\"y\", x)\r\n            }\r\n        }\r\n        if (!isFittedY()) {\r\n            var y = this._fitIntoArea(\"y\", fitIntoRange(getHeight(), minHeight, maxHeight) - size.height);\r\n            fittedDelta = {\r\n                x: this._proportionate(\"x\", y),\r\n                y: y\r\n            }\r\n        }\r\n        return isFittedX() && isFittedY() ? fittedDelta : {\r\n            x: 0,\r\n            y: 0\r\n        }\r\n    },\r\n    _fitDelta: function(_ref2) {\r\n        var {\r\n            x: x,\r\n            y: y\r\n        } = _ref2;\r\n        var size = this._elementSize;\r\n        var {\r\n            minWidth: minWidth,\r\n            minHeight: minHeight,\r\n            maxWidth: maxWidth,\r\n            maxHeight: maxHeight\r\n        } = this.option();\r\n        return {\r\n            x: fitIntoRange(size.width + x, minWidth, maxWidth) - size.width,\r\n            y: fitIntoRange(size.height + y, minHeight, maxHeight) - size.height\r\n        }\r\n    },\r\n    _getDeltaByOffset: function(offset) {\r\n        var sides = this._movingSides;\r\n        var shouldKeepAspectRatio = this._isCornerHandler(sides) && this.option(\"_keepAspectRatio\");\r\n        var delta = {\r\n            x: offset.x * (sides.left ? -1 : 1),\r\n            y: offset.y * (sides.top ? -1 : 1)\r\n        };\r\n        if (shouldKeepAspectRatio) {\r\n            var proportionalDelta = this._getProportionalDelta(delta);\r\n            var fittedProportionalDelta = this._fitDeltaProportionally(proportionalDelta);\r\n            delta = fittedProportionalDelta\r\n        } else {\r\n            var fittedDelta = this._fitDelta(delta);\r\n            var roundedFittedDelta = this._roundByStep(fittedDelta);\r\n            delta = roundedFittedDelta\r\n        }\r\n        return delta\r\n    },\r\n    _updatePosition: function(delta, _ref3) {\r\n        var {\r\n            width: width,\r\n            height: height\r\n        } = _ref3;\r\n        var location = this._elementLocation;\r\n        var sides = this._movingSides;\r\n        var $element = this.$element();\r\n        var elementRect = this._getElementSize();\r\n        var offsetTop = delta.y * (sides.top ? -1 : 1) - ((elementRect.height || height) - height);\r\n        var offsetLeft = delta.x * (sides.left ? -1 : 1) - ((elementRect.width || width) - width);\r\n        move($element, {\r\n            top: location.top + (sides.top ? offsetTop : 0),\r\n            left: location.left + (sides.left ? offsetLeft : 0)\r\n        })\r\n    },\r\n    _dragHandler: function(e) {\r\n        var offset = this._getOffset(e);\r\n        var delta = this._getDeltaByOffset(offset);\r\n        var dimensions = this._updateDimensions(delta);\r\n        this._updatePosition(delta, dimensions);\r\n        this._triggerResizeAction(e, dimensions)\r\n    },\r\n    _updateDimensions: function(delta) {\r\n        var isAbsoluteSize = size => \"px\" === size.substring(size.length - 2);\r\n        var isStepPrecisionStrict = \"strict\" === this.option(\"stepPrecision\");\r\n        var size = this._elementSize;\r\n        var width = size.width + delta.x;\r\n        var height = size.height + delta.y;\r\n        var elementStyle = this.$element().get(0).style;\r\n        var shouldRenderWidth = delta.x || isStepPrecisionStrict || isAbsoluteSize(elementStyle.width);\r\n        var shouldRenderHeight = delta.y || isStepPrecisionStrict || isAbsoluteSize(elementStyle.height);\r\n        if (shouldRenderWidth) {\r\n            this.option({\r\n                width: width\r\n            })\r\n        }\r\n        if (shouldRenderHeight) {\r\n            this.option({\r\n                height: height\r\n            })\r\n        }\r\n        return {\r\n            width: shouldRenderWidth ? width : size.width,\r\n            height: shouldRenderHeight ? height : size.height\r\n        }\r\n    },\r\n    _triggerResizeAction: function(e, _ref4) {\r\n        var {\r\n            width: width,\r\n            height: height\r\n        } = _ref4;\r\n        this._resizeAction({\r\n            event: e,\r\n            width: this.option(\"width\") || width,\r\n            height: this.option(\"height\") || height,\r\n            handles: this._movingSides\r\n        });\r\n        triggerResizeEvent(this.$element())\r\n    },\r\n    _isCornerHandler: sides => 0 === Object.values(sides).reduce((xor, value) => xor ^ value, 0),\r\n    _getOffset: function(e) {\r\n        var offset = e.offset;\r\n        var sides = this._movingSides;\r\n        if (!sides.left && !sides.right) {\r\n            offset.x = 0\r\n        }\r\n        if (!sides.top && !sides.bottom) {\r\n            offset.y = 0\r\n        }\r\n        return offset\r\n    },\r\n    _roundByStep: function(delta) {\r\n        return \"strict\" === this.option(\"stepPrecision\") ? this._roundStrict(delta) : this._roundNotStrict(delta)\r\n    },\r\n    _getSteps: function() {\r\n        return pairToObject(this.option(\"step\"), !this.option(\"roundStepValue\"))\r\n    },\r\n    _roundNotStrict: function(delta) {\r\n        var steps = this._getSteps();\r\n        return {\r\n            x: delta.x - delta.x % steps.h,\r\n            y: delta.y - delta.y % steps.v\r\n        }\r\n    },\r\n    _roundStrict: function(delta) {\r\n        var sides = this._movingSides;\r\n        var offset = {\r\n            x: delta.x * (sides.left ? -1 : 1),\r\n            y: delta.y * (sides.top ? -1 : 1)\r\n        };\r\n        var steps = this._getSteps();\r\n        var location = this._elementLocation;\r\n        var size = this._elementSize;\r\n        var xPos = sides.left ? location.left : location.left + size.width;\r\n        var yPos = sides.top ? location.top : location.top + size.height;\r\n        var newXShift = (xPos + offset.x) % steps.h;\r\n        var newYShift = (yPos + offset.y) % steps.v;\r\n        var sign = Math.sign || (x => {\r\n            x = +x;\r\n            if (0 === x || isNaN(x)) {\r\n                return x\r\n            }\r\n            return x > 0 ? 1 : -1\r\n        });\r\n        var separatorOffset = (steps, offset) => (1 + .2 * sign(offset)) % 1 * steps;\r\n        var isSmallOffset = (offset, steps) => Math.abs(offset) < .2 * steps;\r\n        var newOffsetX = offset.x - newXShift;\r\n        var newOffsetY = offset.y - newYShift;\r\n        if (newXShift > separatorOffset(steps.h, offset.x)) {\r\n            newOffsetX += steps.h\r\n        }\r\n        if (newYShift > separatorOffset(steps.v, offset.y)) {\r\n            newOffsetY += steps.v\r\n        }\r\n        var roundedOffset_x = (sides.left || sides.right) && !isSmallOffset(offset.x, steps.h) ? newOffsetX : 0,\r\n            roundedOffset_y = (sides.top || sides.bottom) && !isSmallOffset(offset.y, steps.v) ? newOffsetY : 0;\r\n        return {\r\n            x: roundedOffset_x * (sides.left ? -1 : 1),\r\n            y: roundedOffset_y * (sides.top ? -1 : 1)\r\n        }\r\n    },\r\n    _getMovingSides: function(e) {\r\n        var $target = $(e.target);\r\n        var hasCornerTopLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-left\");\r\n        var hasCornerTopRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-right\");\r\n        var hasCornerBottomLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-left\");\r\n        var hasCornerBottomRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-right\");\r\n        return {\r\n            top: $target.hasClass(RESIZABLE_HANDLE_TOP_CLASS) || hasCornerTopLeftClass || hasCornerTopRightClass,\r\n            left: $target.hasClass(RESIZABLE_HANDLE_LEFT_CLASS) || hasCornerTopLeftClass || hasCornerBottomLeftClass,\r\n            bottom: $target.hasClass(RESIZABLE_HANDLE_BOTTOM_CLASS) || hasCornerBottomLeftClass || hasCornerBottomRightClass,\r\n            right: $target.hasClass(RESIZABLE_HANDLE_RIGHT_CLASS) || hasCornerTopRightClass || hasCornerBottomRightClass\r\n        }\r\n    },\r\n    _getArea: function() {\r\n        var area = this.option(\"area\");\r\n        if (isFunction(area)) {\r\n            area = area.call(this)\r\n        }\r\n        if (isPlainObject(area)) {\r\n            return this._getAreaFromObject(area)\r\n        }\r\n        return this._getAreaFromElement(area)\r\n    },\r\n    _getAreaScrollOffset: function() {\r\n        var area = this.option(\"area\");\r\n        var isElement = !isFunction(area) && !isPlainObject(area);\r\n        var scrollOffset = {\r\n            scrollY: 0,\r\n            scrollX: 0\r\n        };\r\n        if (isElement) {\r\n            var areaElement = $(area)[0];\r\n            if (isWindow(areaElement)) {\r\n                scrollOffset.scrollX = areaElement.pageXOffset;\r\n                scrollOffset.scrollY = areaElement.pageYOffset\r\n            }\r\n        }\r\n        return scrollOffset\r\n    },\r\n    _getAreaFromObject: function(area) {\r\n        var result = {\r\n            width: area.right - area.left,\r\n            height: area.bottom - area.top,\r\n            offset: {\r\n                left: area.left,\r\n                top: area.top\r\n            }\r\n        };\r\n        this._correctAreaGeometry(result);\r\n        return result\r\n    },\r\n    _getAreaFromElement: function(area) {\r\n        var $area = $(area);\r\n        var result;\r\n        if ($area.length) {\r\n            result = {\r\n                width: getInnerWidth($area),\r\n                height: getInnerHeight($area),\r\n                offset: extend({\r\n                    top: 0,\r\n                    left: 0\r\n                }, isWindow($area[0]) ? {} : $area.offset())\r\n            };\r\n            this._correctAreaGeometry(result, $area)\r\n        }\r\n        return result\r\n    },\r\n    _correctAreaGeometry: function(result, $area) {\r\n        var areaBorderLeft = $area ? this._getBorderWidth($area, \"left\") : 0;\r\n        var areaBorderTop = $area ? this._getBorderWidth($area, \"top\") : 0;\r\n        result.offset.left += areaBorderLeft + this._getBorderWidth(this.$element(), \"left\");\r\n        result.offset.top += areaBorderTop + this._getBorderWidth(this.$element(), \"top\");\r\n        result.width -= getOuterWidth(this.$element()) - getInnerWidth(this.$element());\r\n        result.height -= getOuterHeight(this.$element()) - getInnerHeight(this.$element())\r\n    },\r\n    _dragEndHandler: function(e) {\r\n        var $element = this.$element();\r\n        this._resizeEndAction({\r\n            event: e,\r\n            width: getOuterWidth($element),\r\n            height: getOuterHeight($element),\r\n            handles: this._movingSides\r\n        });\r\n        this._toggleResizingClass(false)\r\n    },\r\n    _renderWidth: function(width) {\r\n        this.option(\"width\", fitIntoRange(width, this.option(\"minWidth\"), this.option(\"maxWidth\")))\r\n    },\r\n    _renderHeight: function(height) {\r\n        this.option(\"height\", fitIntoRange(height, this.option(\"minHeight\"), this.option(\"maxHeight\")))\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"disabled\":\r\n                this._toggleEventHandlers(!args.value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"handles\":\r\n                this._invalidate();\r\n                break;\r\n            case \"minWidth\":\r\n            case \"maxWidth\":\r\n                hasWindow() && this._renderWidth(getOuterWidth(this.$element()));\r\n                break;\r\n            case \"minHeight\":\r\n            case \"maxHeight\":\r\n                hasWindow() && this._renderHeight(getOuterHeight(this.$element()));\r\n                break;\r\n            case \"onResize\":\r\n            case \"onResizeStart\":\r\n            case \"onResizeEnd\":\r\n                this._renderActions();\r\n                break;\r\n            case \"area\":\r\n            case \"stepPrecision\":\r\n            case \"step\":\r\n            case \"roundStepValue\":\r\n            case \"_keepAspectRatio\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        this.$element().find(\".\" + RESIZABLE_HANDLE_CLASS).remove()\r\n    },\r\n    _useTemplates: function() {\r\n        return false\r\n    }\r\n});\r\nregisterComponent(RESIZABLE, Resizable);\r\nexport default Resizable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}