{"ast":null,"code":"'use strict';\n\nconst u = require('universalify').fromPromise;\n\nconst path = require('path');\n\nconst fs = require('../fs');\n\nconst {\n  mkdirs,\n  mkdirsSync\n} = require('../mkdirs');\n\nconst {\n  symlinkPaths,\n  symlinkPathsSync\n} = require('./symlink-paths');\n\nconst {\n  symlinkType,\n  symlinkTypeSync\n} = require('./symlink-type');\n\nconst {\n  pathExists\n} = require('../path-exists');\n\nconst {\n  areIdentical\n} = require('../util/stat');\n\nasync function createSymlink(srcpath, dstpath, type) {\n  let stats;\n\n  try {\n    stats = await fs.lstat(dstpath);\n  } catch {}\n\n  if (stats && stats.isSymbolicLink()) {\n    const [srcStat, dstStat] = await Promise.all([fs.stat(srcpath), fs.stat(dstpath)]);\n    if (areIdentical(srcStat, dstStat)) return;\n  }\n\n  const relative = await symlinkPaths(srcpath, dstpath);\n  srcpath = relative.toDst;\n  const toType = await symlinkType(relative.toCwd, type);\n  const dir = path.dirname(dstpath);\n\n  if (!(await pathExists(dir))) {\n    await mkdirs(dir);\n  }\n\n  return fs.symlink(srcpath, dstpath, toType);\n}\n\nfunction createSymlinkSync(srcpath, dstpath, type) {\n  let stats;\n\n  try {\n    stats = fs.lstatSync(dstpath);\n  } catch {}\n\n  if (stats && stats.isSymbolicLink()) {\n    const srcStat = fs.statSync(srcpath);\n    const dstStat = fs.statSync(dstpath);\n    if (areIdentical(srcStat, dstStat)) return;\n  }\n\n  const relative = symlinkPathsSync(srcpath, dstpath);\n  srcpath = relative.toDst;\n  type = symlinkTypeSync(relative.toCwd, type);\n  const dir = path.dirname(dstpath);\n  const exists = fs.existsSync(dir);\n  if (exists) return fs.symlinkSync(srcpath, dstpath, type);\n  mkdirsSync(dir);\n  return fs.symlinkSync(srcpath, dstpath, type);\n}\n\nmodule.exports = {\n  createSymlink: u(createSymlink),\n  createSymlinkSync\n};","map":{"version":3,"names":["u","require","fromPromise","path","fs","mkdirs","mkdirsSync","symlinkPaths","symlinkPathsSync","symlinkType","symlinkTypeSync","pathExists","areIdentical","createSymlink","srcpath","dstpath","type","stats","lstat","isSymbolicLink","srcStat","dstStat","Promise","all","stat","relative","toDst","toType","toCwd","dir","dirname","symlink","createSymlinkSync","lstatSync","statSync","exists","existsSync","symlinkSync","module","exports"],"sources":["C:/Users/gayle/Dev/hydration-app/node_modules/gh-pages/node_modules/fs-extra/lib/ensure/symlink.js"],"sourcesContent":["'use strict'\n\nconst u = require('universalify').fromPromise\nconst path = require('path')\nconst fs = require('../fs')\n\nconst { mkdirs, mkdirsSync } = require('../mkdirs')\n\nconst { symlinkPaths, symlinkPathsSync } = require('./symlink-paths')\nconst { symlinkType, symlinkTypeSync } = require('./symlink-type')\n\nconst { pathExists } = require('../path-exists')\n\nconst { areIdentical } = require('../util/stat')\n\nasync function createSymlink (srcpath, dstpath, type) {\n  let stats\n  try {\n    stats = await fs.lstat(dstpath)\n  } catch { }\n\n  if (stats && stats.isSymbolicLink()) {\n    const [srcStat, dstStat] = await Promise.all([\n      fs.stat(srcpath),\n      fs.stat(dstpath)\n    ])\n\n    if (areIdentical(srcStat, dstStat)) return\n  }\n\n  const relative = await symlinkPaths(srcpath, dstpath)\n  srcpath = relative.toDst\n  const toType = await symlinkType(relative.toCwd, type)\n  const dir = path.dirname(dstpath)\n\n  if (!(await pathExists(dir))) {\n    await mkdirs(dir)\n  }\n\n  return fs.symlink(srcpath, dstpath, toType)\n}\n\nfunction createSymlinkSync (srcpath, dstpath, type) {\n  let stats\n  try {\n    stats = fs.lstatSync(dstpath)\n  } catch { }\n  if (stats && stats.isSymbolicLink()) {\n    const srcStat = fs.statSync(srcpath)\n    const dstStat = fs.statSync(dstpath)\n    if (areIdentical(srcStat, dstStat)) return\n  }\n\n  const relative = symlinkPathsSync(srcpath, dstpath)\n  srcpath = relative.toDst\n  type = symlinkTypeSync(relative.toCwd, type)\n  const dir = path.dirname(dstpath)\n  const exists = fs.existsSync(dir)\n  if (exists) return fs.symlinkSync(srcpath, dstpath, type)\n  mkdirsSync(dir)\n  return fs.symlinkSync(srcpath, dstpath, type)\n}\n\nmodule.exports = {\n  createSymlink: u(createSymlink),\n  createSymlinkSync\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}