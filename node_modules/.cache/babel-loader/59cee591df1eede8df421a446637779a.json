{"ast":null,"code":"import{React,useState,useEffect}from'react';import{Link}from\"react-router-dom\";//import WaterGlass from '../components/WaterGlass';\nimport TimerRunning from'../components/TimerRunning';import TimerFinished from'../components/TimerFinished';import CountdownTimer from'../components/CountdownTimer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function WaterPage(){const[time,setTime]=useState([]);const[reset,setReset]=useState(false);const[clickCount,setClickCount]=useState(0);const[seconds,setSeconds]=useState({sec1:5,sec2:9,secTotal:60,zero:0});const[minutes,setMinutes]=useState({min1:'',min2:'',minTotal:0,zero:0});//Time now to stop the countdown at the selected hour\nlet today=new Date();let currentHour=today.getHours();//Get question page info from local storage. \nuseEffect(()=>{const time=JSON.parse(localStorage.getItem('time'));if(time){setTime(time);}setMinutes(minutes=>({...minutes,minTotal:time.remindAmount}));},[]);//Initially sets the single minutes\nuseEffect(()=>{if(time.length!==0){let min=time.remindAmount-1;let newMin=min.toString().split('');let minSplit=newMin.map(Number);setMinutes(minutes=>({...minutes,minTotal:minutes.minTotal-1,min1:minSplit[0],min2:minSplit[1]}));}},[time]);//timer countdown.\nuseEffect(()=>{//Splits the seconds to individual seconds\nlet sec=seconds.secTotal-1;let newSec=sec.toString().split('');let secSplit=newSec.map(Number);if(secSplit.length===1){secSplit.unshift(0);}//Splits the minutes to individual digits\nlet min=minutes.minTotal-1;let newMin=min.toString().split('');let minSplit=newMin.map(Number);if(minSplit.length===1){secSplit.unshift(0);}//Greater than 0 - countdown keeps going\nif(seconds.secTotal>0){const timer=()=>setTimeout(()=>setSeconds(seconds=>({...seconds,secTotal:seconds.secTotal-1,sec1:secSplit[0],sec2:secSplit[1]})),1000);const timerId=timer();if(reset===true){clearTimeout(timerId);setReset(false);setMinutes(minutes=>({...minutes,minTotal:time.remindAmount-1}));setSeconds(seconds=>({...seconds,secTotal:60}));}}//Seconds = 0 will reduce minutes by 1 and reset seconds to 59\nif(seconds.secTotal===0&&reset===false){setMinutes(minutes=>({...minutes,minTotal:minutes.minTotal-1,min1:minSplit[0],min2:minSplit[1]}));setSeconds(seconds=>({...seconds,secTotal:59}));}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[seconds]);//Figure out how much water to drink each time\nlet difference=time.endValue-time.startValue;let remind;switch(time.remindValue){case 1:remind=0.5;break;case 2:remind=0.75;break;case 3:remind=1;break;default:remind=1.5;}let remindAmountofTimes=Math.floor(difference/remind);let drinkAmount=Math.round(time.waterAmount*1000/remindAmountofTimes);let totalDrank=drinkAmount*clickCount;const handleReset=()=>{setReset(true);setClickCount(prevClick=>{return prevClick+1;});};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"drink-heading\",children:\"Drink up!\"}),currentHour>=time.endValue?null:/*#__PURE__*/_jsx(CountdownTimer,{min1:minutes.min1,min2:minutes.min2,sec1:seconds.sec1,sec2:seconds.sec2}),currentHour>=time.endValue?/*#__PURE__*/_jsx(TimerFinished,{waterAmount:time.waterAmount,totalDrank:totalDrank,difference:difference}):/*#__PURE__*/_jsx(TimerRunning,{waterAmount:time.waterAmount,difference:difference,drinkAmount:drinkAmount}),currentHour>=time.endValue?null:/*#__PURE__*/_jsx(\"button\",{className:\"drink-button\",onClick:handleReset,children:\"I drank water! \"}),/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(\"button\",{className:\"reset-button\",children:\"Start again\"})}),currentHour>=time.endValue?/*#__PURE__*/_jsx(\"p\",{children:\"Stop drinking water! You can reset again tomorrow\"}):/*#__PURE__*/_jsx(\"p\",{children:\"Keep drinking!!\"})]});}export default WaterPage;//Also - an alarm that goes off when the times reaches 0\n//Fix the css of the countdown - add in a page flip\n//Sort out what happens when the timer reaches 0 with the water glass animation","map":{"version":3,"names":["React","useState","useEffect","Link","TimerRunning","TimerFinished","CountdownTimer","WaterPage","time","setTime","reset","setReset","clickCount","setClickCount","seconds","setSeconds","sec1","sec2","secTotal","zero","minutes","setMinutes","min1","min2","minTotal","today","Date","currentHour","getHours","JSON","parse","localStorage","getItem","remindAmount","length","min","newMin","toString","split","minSplit","map","Number","sec","newSec","secSplit","unshift","timer","setTimeout","timerId","clearTimeout","difference","endValue","startValue","remind","remindValue","remindAmountofTimes","Math","floor","drinkAmount","round","waterAmount","totalDrank","handleReset","prevClick"],"sources":["C:/Users/gayle/Dev/hydration-app/src/routes/WaterPage.js"],"sourcesContent":["import { React, useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\"\n//import WaterGlass from '../components/WaterGlass';\nimport TimerRunning from '../components/TimerRunning';\nimport TimerFinished from '../components/TimerFinished';\nimport CountdownTimer from '../components/CountdownTimer';\n\nfunction WaterPage() {\n\n  const [time, setTime] = useState([]);\n  const [reset, setReset] = useState(false);\n  const [clickCount, setClickCount] = useState(0)\n  const [seconds, setSeconds] = useState({\n    sec1: 5,\n    sec2: 9,\n    secTotal: 60,\n    zero: 0\n  });\n  const [minutes, setMinutes] = useState({\n    min1: '',\n    min2: '',\n    minTotal: 0,\n    zero: 0\n  });\n\n  //Time now to stop the countdown at the selected hour\n  let today = new Date();\n  let currentHour = today.getHours();\n\n  //Get question page info from local storage. \n  useEffect(() => {\n    const time = JSON.parse(localStorage.getItem('time'));\n    if (time) {\n      setTime(time)\n    }\n    setMinutes(minutes => ({\n      ...minutes,\n      minTotal: time.remindAmount\n    }))\n  }, []);\n\n  //Initially sets the single minutes\n  useEffect(() => {\n    if (time.length !== 0) {\n      let min = time.remindAmount - 1\n      let newMin = min.toString().split('')\n      let minSplit = newMin.map(Number)\n      setMinutes(minutes => ({\n        ...minutes,\n        minTotal: minutes.minTotal - 1,\n        min1: minSplit[0],\n        min2: minSplit[1]\n      }))\n  }\n  }, [time])\n\n\n  //timer countdown.\n  useEffect(() => {\n    //Splits the seconds to individual seconds\n    let sec = seconds.secTotal - 1\n    let newSec = sec.toString().split('')\n    let secSplit = newSec.map(Number)\n    if (secSplit.length === 1) {\n      secSplit.unshift(0)\n    }\n    //Splits the minutes to individual digits\n    let min = minutes.minTotal - 1\n    let newMin = min.toString().split('')\n    let minSplit = newMin.map(Number)\n    if (minSplit.length === 1) {\n      secSplit.unshift(0)\n    }\n    //Greater than 0 - countdown keeps going\n    if (seconds.secTotal > 0) {\n      const timer = () => setTimeout(() => setSeconds(seconds => ({...seconds, secTotal: seconds.secTotal - 1, sec1: secSplit[0], sec2: secSplit[1]})), 1000);\n      const timerId = timer()\n      if (reset === true) {\n        clearTimeout(timerId)\n        setReset(false)\n        setMinutes(minutes => ({\n          ...minutes,\n          minTotal: time.remindAmount - 1\n        }))\n        setSeconds(seconds => ({\n          ...seconds,\n          secTotal: 60\n        }))\n      }\n    }\n    //Seconds = 0 will reduce minutes by 1 and reset seconds to 59\n    if(seconds.secTotal === 0 && reset === false) {\n      setMinutes(minutes => ({\n        ...minutes,\n        minTotal: minutes.minTotal - 1,\n        min1: minSplit[0],\n        min2: minSplit[1]\n      }))\n      setSeconds(seconds => ({\n        ...seconds,\n        secTotal: 59\n      }))\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [seconds]);\n\n  \n  //Figure out how much water to drink each time\n  let difference = time.endValue - time.startValue;\n  let remind;\n  switch (time.remindValue) {\n    case 1:\n      remind = 0.5;\n      break;\n    case 2: \n      remind = 0.75;\n      break;\n    case 3: \n      remind = 1;\n      break;\n    default:\n      remind = 1.5;\n  }\n  let remindAmountofTimes = Math.floor(difference / remind);\n  let drinkAmount = Math.round((time.waterAmount * 1000) / remindAmountofTimes);\n  let totalDrank = drinkAmount * clickCount;\n\n  const handleReset = () => {\n    setReset(true)\n    setClickCount(prevClick => {\n      return ( prevClick + 1 )\n    })\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"drink-heading\">Drink up!</h1>\n      {currentHour >= time.endValue ? null : <CountdownTimer min1={minutes.min1} min2={minutes.min2} sec1={seconds.sec1} sec2={seconds.sec2} />}\n      {currentHour >= time.endValue ? <TimerFinished waterAmount={time.waterAmount} totalDrank={totalDrank} difference={difference} /> : <TimerRunning waterAmount={time.waterAmount} difference={difference} drinkAmount={drinkAmount} /> }\n      {currentHour >= time.endValue ? null : <button className=\"drink-button\" onClick={handleReset}>I drank water! </button> }\n      <Link to=\"/\"><button className=\"reset-button\">Start again</button></Link>\n      {currentHour >= time.endValue ? <p>Stop drinking water! You can reset again tomorrow</p> : <p>Keep drinking!!</p>}\n    </div>\n  )\n}\n\nexport default WaterPage;\n\n \n//Also - an alarm that goes off when the times reaches 0\n//Fix the css of the countdown - add in a page flip\n//Sort out what happens when the timer reaches 0 with the water glass animation\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}